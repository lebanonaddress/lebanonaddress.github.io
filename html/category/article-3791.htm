<!DOCTYPE html>
<html lang="zh-CN">

<head>
       <link rel="canonical" href="https://lebanonaddress.github.io/html/category/article-3791.htm" />
    <!-- basic -->
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- mobile metas -->
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="viewport" content="initial-scale=1, maximum-scale=1">
    <link rel="icon" href="/assets/addons/xcblog/img/lebanonaddress/favicon.ico" type="image/x-icon"/>
    <!-- site metas -->
    <title>手撕spring核心源码，彻底搞懂spring流程 - Lebanon Address</title>
        <!-- bootstrap css -->
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/lebanonaddress/bootstrap.min.css">
    <!-- style css -->
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/lebanonaddress/style.css">
    <!-- Responsive-->
    <link rel="stylesheet" href="/assets/addons/xcblog/css/lebanonaddress/responsive.css">
    <!-- Scrollbar Custom CSS -->
    <link rel="stylesheet" href="/assets/addons/xcblog/css/lebanonaddress/jquery.mCustomScrollbar.min.css">
    <!-- Tweaks for older IEs-->
    <link rel="stylesheet" href="https://cdn.bootcdn.net/ajax/libs/font-awesome/4.0.3/css/font-awesome.css">
    <!-- fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600;700&display=swap" rel="stylesheet">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?f480db041fa3a9ffc78a7d6776ae8726";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
       <!-- header section start -->
    <div class="header_section">
        <div class="container">
            <nav class="navbar navbar-expand-lg navbar-light bg-light">
                <div class="logo">
                                        <a href="/">Lebanon Address</a>
                                    </div>
                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarSupportedContent">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
            </nav>
        </div>
    </div>
    <!-- header section end -->
      <!-- services section start -->
      <div class="services_section layout_padding">
         <div class="container">
            <div class="row">
               <div class="col-sm-12">
                  <h1 class="services_taital"><span class="about_icon">手撕spring核心源码，彻底搞懂spring流程 </h1>
                    <p class="nav-box text-center">
                        <a href="/">首页</a> / <a href="/html/category/">文章分类</span>
                    </p>
               </div>
            </div>
         </div>
      </div>
      <!-- services section end -->
    <!-- about sectuion start -->
    <div class="about_section layout_padding">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                      				  				  				<p><strong>引子</strong></p> <p>十几年前，刚工作不久的程序员还能过着很轻松的日子。记得那时候公司里有些开发和测试的女孩子，经常有问题解决不了的，不管什么领域的问题找到我，我都能帮她们解决。但是那时候我没有主动学习技术的意识，只是满足于解决问题，错过了能力提升最好的阶段。</p> <p>老公是个截然相反的类型，我就看他天天在宿舍里学习。学来学去也就那样了。他不陪我玩，我虽然心里不乐意，但是还好那时候未卜先知：知道自己能生一个长的帅、和我兴趣相投、天天粘我，我在他旁边他睡觉都能笑出声的儿子，就忍下了。我就自己学学历史、文学，出去上个外语培训班，什么感兴趣学什么。就是正经工作中的东西不学。</p> <p>后来才发现自己犯了多大一个错误：没有尽早建立一个系统性的知识体系和思维，还影响了思维上的连续性和逻辑性。武侠故事里一夜得到神功是骗人的，功夫还在平时。老公看似做了十几年长进不大的事，基础却非常扎实，有功力。但是如果他能头脑再活络些，掌握要领，可以事半功倍。</p> <p>很多朋友想学习Spring，总是很快地从入门到放弃。原因是头脑中没有框架，学到的东西没有索引，最终被深藏于记忆深处。本文通过手撕spring核心源码的方式，旨在让大家可以在头脑中形成一个spring框架，然后自己在工作中可以带着问题翻看源码，给这个框架添枝加叶，最终形成了一个饱满的spring知识体系。</p> <p>本文整体采用由浅入深的逻辑结构。侧重于面向于平时工作或学习中用spring写过业务代码的朋友。</p> <p><strong>HelloWorld版本Spring启动代码</strong></p> <p>有些朋友可能写过或者见过ClassPathXmlApplicationContext、AnnotationConfigApplicationContext，它们都是常见的spring容器或者是上下文。既然说到这里，就先来解释什么是spring容器，什么是spring上下文。</p> <p>Spring的核心就是容器，负责对象的整个生命周期：创建、管理、销毁程序执行过程中需要的对象。</p> <p>Spring容器又分为两种类型：第一种是BeanFactory，最简单的容器，只能提供基本的DI功能）另一种是:继承了BeanFactory后派生而来的ApplicationContext，被称之为Spring上下文。能提供更多企业级的服务。咱们最常用的还是基于IOC(控制反转)的上下文容器。</p> <p>现在SpringBoot使用的很多，所以今天咱们手撕的主要是实现 AnnotationConfigApplicationContext 这个注解上下文的原理。</p> <p>咱们开始手撕。参照下面咱们用 spring 的方法，首先要有一个上下文将配置参数传入，然后有一个 getBean 可以获取对象来使用。</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/cdc5083a78880191e17e614f212bdc01.jpg" alt="手撕spring核心源码，彻底搞懂spring流程"></p> <p>那咱们就根据这两个特质自己写一个类，要点如下图1和2两步。</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/6c310638e1670902f7f2750a51fb9711.jpg" alt="手撕spring核心源码，彻底搞懂spring流程"></p> <p>既然需要将configClass配置类作为参数传入，就先来构造一个空的配置类。</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/85e7ac46622ce9e6939aa6cd9139530c.jpg" alt="手撕spring核心源码，彻底搞懂spring流程"></p> <p>这样从表面上，就可以像使用AnnotationConfigApplicationContext一样使用Spring容器了。</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/6f7fc73ce5ebbd9a89bc5ce951a9c121.jpg" alt="手撕spring核心源码，彻底搞懂spring流程"></p> <p>为了标注重点和屏蔽用户终端差异带来的文章阅读体验差异，这里我直接用的截图。代码文字在 https://github.com/xiexiaojing/yuna 里可以找到。</p> <p><strong>手撕Spring扫描流程</strong></p> <p>所谓HelloWorld版本就是除了入门，其他没有任何作用。咱们希望它可以实现自动扫描文件夹下的带有@Component注解的Bean完成注入。首先自己来新建一个@Component注解：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/bfe8e8b338ac6c93bd639f60017a4001.jpg" alt="手撕spring核心源码，彻底搞懂spring流程"></p> <p>并在UserService中使用这个注解：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/2180e02f968bbda62e990340b72656d8.jpg" alt="手撕spring核心源码，彻底搞懂spring流程"></p> <p>当然，Component注解是用来扫描的，那还得来定义一个扫描注解，就是把Component注解复制一份，改个名字：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/13898414339a79d9511359d5ad4bbed0.jpg" alt="手撕spring核心源码，彻底搞懂spring流程"></p> <p>ComponentScan这个注解要加在YunaConfig上，通过它来加载扫描配置：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/edb7395b46a8da4a4fa7c57141e8d566.jpg" alt="手撕spring核心源码，彻底搞懂spring流程"></p> <p>咱们再回到YunaApplicationContext，配置类定义完之后，咱们下一步上下文就来解析它：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/6132545ec61854e5aa161e0940889d67.jpg" alt="手撕spring核心源码，彻底搞懂spring流程"></p> <p>这时候咱们回到main方法，运行结果：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/eb4488177864cb79b78f3a3c306304ae.jpg" alt="手撕spring核心源码，彻底搞懂spring流程"></p> <p>咱们拿到了解析路径，但是UserService这个Bean还是空的。重点来了，下面的代码要注意看:</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/c2fd000db22259f6e13c36aba0f2b4d4.jpg" alt="手撕spring核心源码，彻底搞懂spring流程"></p> <p>上面首先使用hutool工具扫描path得到包下类的集合，然后从集合中过滤留下使用了Component注解的class。是不是还挺简单的？</p> <p>当然，这里类还没有被实例化，所以这里只是打印一下类名看看效果：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/aeee7c97ffdd88241ff63aa94c1acdb8.jpg" alt="手撕spring核心源码，彻底搞懂spring流程"></p> <p>从结果可以看到类已经获取到了。下一步实例化。</p> <p>手撕Spring实例化对象流程</p> <p>实例化对象，主要有两种作用域。一种是单例的，一种是多例的。这又要给用户选择了。给用户选择的地方都是通过注解。再将Component注解类复制一份，改名叫Scope。value默认是singleon，单例。</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/93f7703a5a968b247cafaf80fe3df253.jpg" alt="手撕spring核心源码，彻底搞懂spring流程"></p> <p>实例化对象需要一个容器来存放，首先要定义一个对象BeanDefination来存放对象的描述：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/705245baa8ea68ccbbf7001e833e71b2.jpg" alt="手撕spring核心源码，彻底搞懂spring流程"></p> <p>每个class对应一个BeanDefination，存放到一个map容器中：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/f5e9b4b98fdaab9aac66a9307abcb1b3.jpg" alt="手撕spring核心源码，彻底搞懂spring流程"></p> <p>要获取实例的时候需要判断是否是单例的，单例的就用一个map存起来下次获取时直接用，不是单例就直接实例化。</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/6c047cf9d88c3a132ce616cabff5a3b5.jpg" alt="手撕spring核心源码，彻底搞懂spring流程"></p> <p>运行看看效果：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/9fcdcc8fc1c8a7f4f8c883a7039bbcd1.jpg" alt="手撕spring核心源码，彻底搞懂spring流程"></p> <p>这次不是null，而是具体的实例了。但是咱们不满足于用getBean获取呀，下面咱们来看怎么自动注入。</p> <p>手撕Spring依赖注入流程</p> <p>首先来定义一个标识注入的注解Autowired:</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/d82a14bc08c6ed640d7fec0d5f2ad25e.jpg" alt="手撕spring核心源码，彻底搞懂spring流程"></p> <p>再任意定义一个Bean做注入测试：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/b4ecdc698ed184d94aad35b3cc5f16f7.jpg" alt="手撕spring核心源码，彻底搞懂spring流程"></p> <p>注入到UserService对象中：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/926f3ef70a27c716db2b3c62e71d6735.jpg" alt="手撕spring核心源码，彻底搞懂spring流程"></p> <p>把newInstance实例化的地方单独提取一个方法，实例化时获取类是否有Autowired注解的，有的化先实例化它：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/bb27669bdffdc933aacdb3a094d5540a.jpg" alt="手撕spring核心源码，彻底搞懂spring流程"></p> <p>测试效果：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/90f992fc4fb96ecc5684776c4cc9525b.jpg" alt="手撕spring核心源码，彻底搞懂spring流程"></p> <p><strong>总结</strong></p> <p><strong></strong></p> <p>这里面的代码咱们在平时业务开发中常用，我也没多解释。大家有没有感觉整个流程就像做业务开发一样顺畅。其实写底层容器就是这样，原理了解了一点都不难。</p> 			
                    <div class="col-md-12 mt-5">
                                                <p>上一个：<a href="/html/category/article-3790.htm">Spring boot项目中自定义FeignClient的拦截器处理header和签名等信息</a></p>
                                                <p>下一个：<a href="/html/category/article-3792.htm">真正的高并发还得看IO多路复用</a></p>
                                            </div>

                                    </div>
                <div class="col-md-3">
                  <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-7008.htm" title="青岛最好的动物医院在哪里（青岛最好的动物医院在哪里啊）">青岛最好的动物医院在哪里（青岛最好的动物医院在哪里啊）</a></li>
                        <li class="py-2"><a href="/html/category/article-7376.htm" title="动物疫苗代理 动物疫苗代理需要什么资质">动物疫苗代理 动物疫苗代理需要什么资质</a></li>
                        <li class="py-2"><a href="/html/category/article-7147.htm" title="play是什么牌子的衣服贵吗(play是什么牌子的衣服价格)">play是什么牌子的衣服贵吗(play是什么牌子的衣服价格)</a></li>
                        <li class="py-2"><a href="/html/category/article-7239.htm" title="动物疫苗的定义和分类（动物疫苗的生产原料有哪些,如何取得）">动物疫苗的定义和分类（动物疫苗的生产原料有哪些,如何取得）</a></li>
                        <li class="py-2"><a href="/html/category/article-7055.htm" title="重庆宠物领养中心有哪些地方好（重庆宠物猫领养中心）">重庆宠物领养中心有哪些地方好（重庆宠物猫领养中心）</a></li>
                        <li class="py-2"><a href="/html/category/article-6733.htm" title="瓷砖旗下品牌大全">瓷砖旗下品牌大全</a></li>
                        <li class="py-2"><a href="/html/category/article-6130.htm" title="附近动物诊所在哪里（附近动物店）">附近动物诊所在哪里（附近动物店）</a></li>
                        <li class="py-2"><a href="/html/category/article-6917.htm" title="上海宠物美容学校培训价格表（上海宠物美容师培训班多少钱,需要学多久）">上海宠物美容学校培训价格表（上海宠物美容师培训班多少钱,需要学多久）</a></li>
                        <li class="py-2"><a href="/html/category/article-6595.htm" title="兽药生产厂家排名（兽药生产企业排名）">兽药生产厂家排名（兽药生产企业排名）</a></li>
                        <li class="py-2"><a href="/html/category/article-7423.htm" title="超级翁婿分集介绍大结局（超级翁婿）满满干货，">超级翁婿分集介绍大结局（超级翁婿）满满干货，</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



               </div>
            </div>
        </div>
    </div>
    <!-- about sectuion end -->
        <!-- copyright section start -->
    <div class="copyright_section">
        <div class="container">
            <div class="row">
                <div class="col-sm-12">
                    <p class="copyright_text">
                        Lebanon Address 版权所有
                        <br />
                        Powered by WordPress
                    </p>
                </div>
            </div>
        </div>
    </div>
    <!-- copyright section end -->
    <!-- Javascript files-->
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/jquery.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/popper.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/bootstrap.bundle.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/jquery-3.0.0.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/plugin.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>
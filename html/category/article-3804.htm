<!DOCTYPE html>
<html lang="zh-CN">

<head>
       <link rel="canonical" href="https://lebanonaddress.github.io/html/category/article-3804.htm" />
    <!-- basic -->
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- mobile metas -->
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="viewport" content="initial-scale=1, maximum-scale=1">
    <link rel="icon" href="/assets/addons/xcblog/img/lebanonaddress/favicon.ico" type="image/x-icon"/>
    <!-- site metas -->
    <title>从零开始学Python(六):函数,模块和类的使用 - Lebanon Address</title>
        <!-- bootstrap css -->
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/lebanonaddress/bootstrap.min.css">
    <!-- style css -->
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/lebanonaddress/style.css">
    <!-- Responsive-->
    <link rel="stylesheet" href="/assets/addons/xcblog/css/lebanonaddress/responsive.css">
    <!-- Scrollbar Custom CSS -->
    <link rel="stylesheet" href="/assets/addons/xcblog/css/lebanonaddress/jquery.mCustomScrollbar.min.css">
    <!-- Tweaks for older IEs-->
    <link rel="stylesheet" href="https://cdn.bootcdn.net/ajax/libs/font-awesome/4.0.3/css/font-awesome.css">
    <!-- fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600;700&display=swap" rel="stylesheet">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?f480db041fa3a9ffc78a7d6776ae8726";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
       <!-- header section start -->
    <div class="header_section">
        <div class="container">
            <nav class="navbar navbar-expand-lg navbar-light bg-light">
                <div class="logo">
                                        <a href="/">Lebanon Address</a>
                                    </div>
                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarSupportedContent">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
            </nav>
        </div>
    </div>
    <!-- header section end -->
      <!-- services section start -->
      <div class="services_section layout_padding">
         <div class="container">
            <div class="row">
               <div class="col-sm-12">
                  <h1 class="services_taital"><span class="about_icon">从零开始学Python(六):函数,模块和类的使用 </h1>
                    <p class="nav-box text-center">
                        <a href="/">首页</a> / <a href="/html/category/">文章分类</span>
                    </p>
               </div>
            </div>
         </div>
      </div>
      <!-- services section end -->
    <!-- about sectuion start -->
    <div class="about_section layout_padding">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                      				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <p>从这章开始,我们不在使用sublime文本编译器进行编码了,主要是我们每次运行的使用还得去命令行执行pyhon <em>*</em>.py命令查看结果,操作比较麻烦.推荐大家使用Pycharm(具体安装使用教程大家度娘就可以了).python王牌编译器,谁用谁知道~!</p> <h3 id="python函数">Python函数</h3> <h4 id="定义">定义</h4> <p>函数是组织好的,可重复利用的,用来实现单一,或相关联功能的代码片段. <br /> 函数能提高应用的模块行,使代码逻辑更加的条理清晰.</p> <h4 id="内建函数">内建函数</h4> <p>内建函数是Python中自带的,可供用户重复使用的一类单一功能的函数,比如我们常用的print函数,就属于内建函数.</p> <h4 id="自定义函数">自定义函数</h4> <p>Python中除了内建函数外,我们用的最多的就是自定义函数了,我们可以根据我们的代码功能,把代码切割成一段段独立的功能函数.然后在需要使用的地方直接调用用即可. <br /> 自定义函数包含以下几个规则:</p> <ul> <li>函数带代码块以def开头,然后接函数名和()</li> <li>函数的参数放在()中</li> <li>函数代码的第一句可以可以使用文档字符串,用于对函数的说明</li> <li>函数内容都是以:起始,并且缩进</li> <li>return 是结束函数,用于函数值返回,当然如果你的函数不需要值返回,可以不写</li> </ul> <p>我们来看一个完整的例子</p> <pre><code>def maxNum(a,b):     """     比较两个值得大小,返回值大的那个     :param a:     :param b:     :return:     """      if a>=b:         return a     else:         return b </code></pre> <p>上面例子中,我们自定义了一个名称叫maxNum的自定义函数,他的功能是传入两个值,它会返回更大的那个值,”“”“”双三引号中的内容是函数的注释说明,下面是代码逻辑.</p> <h5 id="函数的调用">函数的调用</h5> <p>我们定义了一个函数之后,当然需要使用啦,函数调用也非常简单,只需要调用他的方法名即可,可以再其他函数中调用,也可以直接调用 <br /> 如下例子:</p> <pre><code>def maxNum(a,b):     """     比较两个值得大小,返回值大的那个     :param a:     :param b:     :return:     """      if a>=b:         return a     else:         return b     def readNum():   #在函数中调用了maxNum函数     a=101     b=102      m=maxNum(a,b)     print m    m=maxNum(101,102)   #直接调用 print m </code></pre> <p>上面例子直接运行会,系统会直接调用最下面的代码,输出102,</p> <h4 id="函数的导入">函数的导入</h4> <p>有时候,我们会在其他模块中用到另外一个模块中的函数,比如我们新建了一个test.py模块中的函数maxNum,然后又新建了一个fast.py模块,如果我们要在fast.py模块中使用test.py模块中的maxNum函数,就需要使用import test导入test.py模块</p> <p><strong>一个py文件就代表一个模块!!!!</strong></p> <p>举个例子:</p> <p>test.py模块代码 </p> <pre><code>#coding=utf-8   def maxNum(a,b):     """     比较两个值得大小,返回值大的那个     :param a:     :param b:     :return:     """      if a>=b:         return a     else:         return b </code></pre> <p>fast.py模块代码</p> <pre><code>#coding=utf-8  import test    #方式一...可以直接导入模块,然后通过模块名.函数名调用 from test import *  #方式二...也可以通过from先找到模块,然后通过import导入模块中的所有函数  def fast():     a=200     b=300      m=test.maxNum(a,b)   #方式一导入时,必须先通过模块名,再调用函数名     m=maxNum(a,b)   #方式二导入时,可直接调用函数名      print m </code></pre> <p>我们认真看fast.py文件中的调用方式,主要有两种,import 和from..import,两种的区别都在例子中说明了,大家可以自己多试试体会一下.</p> <h4 id="python的类">Python的类</h4> <p>Python是一门面向对象的语言,和java或者oc一样,我们把一个类归为一个对象.如果你没有接触过相关的面向对象的语言,可能你还需要去找相关的知识补一下.以下我会简单的说明下.</p> <h4 id="类的定义">类的定义</h4> <p>类是用来描述一些具有相同类型或者属性方法的集合,我们把类的实例叫做一个对象. <br /> 下面举个例子以便大家理解</p> <p>比如定义一个人这个类,他有年龄,身高,性格等属性,还可能有一些挑水,砍柴等技能.当一个母亲生下一个人来的时候(相当于类的实例),我们就能够得到一个实际的对象,这个对象被赋予了前面说的那些属性.</p> <h4 id="类的几个概念">类的几个概念</h4> <ul> <li>类变量 ,(也叫全局变量)类的变量在对象中是公用的,类变量定义在类函数以外,类变量通常不作为实例对象使用.</li> <li>类函数,(也叫类方法)类中定义的函数,一般包含一定的功能</li> <li>成员变量,(也叫局部变量)成员变量一般的活动范围限于一个函数之中</li> <li>继承：即一个派生类（derived class）继承基类（base class）的字段和方法。 继承也允许把一个派生类的对象作为一个基类对象对待。 例如，有这样一个设计：一个Dog类型的对象派生自Animal类，这是模拟”是一个（is-a）”关系（例图，Dog是一个Animal）。</li> <li>方法重写：如果从父类继承的方法不能满足子类的需求，可以对其进行改写，这个过程叫方法的覆盖（override），也称为方法的重写。</li> </ul> <h4 id="自定义类">自定义类</h4> <p>使用class关键字,接方法名来创建 <br /> 举例:</p> <pre><code>class student():     """     我是一个学生     """      def read(self):         """         我会读书          """         print 'read' </code></pre> <p>上面我们创建一个student的类,里面有个类函数read,我们可以通过类名.<strong>doc</strong>来查看函数说明(也就是双三引号部分的内容)</p> <h4 id="self关键字">self关键字</h4> <p>在上面创建的类的例子中,你可能会疑惑read函数中的self的含义,现在我们就来说明一下 <br /> self代表的是当前类的示例,也就是一个对象,通过他,我们可以在一个方法中调用类中的另外一个方法,有点类似于java中的this和oc中self. <br /> 举例:</p> <pre><code>class student():     """     我是一个学生     """      def read(self):         """         我会读书          """         print 'read'       def talk(self):         """         我会谈论         :return:         """         print 'talk'          self.read() </code></pre> <p>上面的例子中,我们需要在函数方法talk中调用函数方法read,但是要怎么调用呢,这时候self就是一个桥梁,我们通过self得到类的对象示例,从而得到他的对象和方法,再通过实例去调用read函数方法就可以了</p> <h4 id="类的实例">类的实例</h4> <p>在java或者oc中,一个类的实例往往会用到new关键字,但在Python中,类的实例直接使用类名()即可</p> <pre><code>s=student()  #student为类名,s为得到的类变量,也就是类的实例 </code></pre> <p>基本上,当我们得到一个类的实例的时候,基本就相当于得到了它的所有,我们可以通过实例调用他的函数方法,也可以通过实例调用他的全局变量.</p> <h4 id="python-类内置属性">Python 类内置属性</h4> <p>Python的中的类,不管是内置的还是自定义的,都包含一些共有的内置属性.</p> <pre><code>__dict__  :该属性会把整个类中的属性和数据组成一个字典返回 __doc__: 返回一个类的描述 __name__:返回类的类名 __moudle__ :返回类所在的模块名 __base__:返回一个所有父类构成的元组 </code></pre> <h3 id="qa">Q&A</h3> <p>到这里,我们这一章就讲完了,其实对象是一个很广泛的定义,我们这里只是简单的介绍了一下他的使用,深入的了解需要我们在日后的开发中不断的去尝试,理解.</p> </p></div> 			
                    <div class="col-md-12 mt-5">
                                                <p>上一个：<a href="/html/category/article-3803.htm">函数的返回值存储问题</a></p>
                                                <p>下一个：<a href="/html/category/article-3805.htm">git语法_在git-pandas中引入统一的glob语法</a></p>
                                            </div>

                                    </div>
                <div class="col-md-3">
                  <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-6779.htm" title="胶原蛋白肽粉哪个品牌好一点(胶原蛋白肽粉哪个品牌好一点儿)">胶原蛋白肽粉哪个品牌好一点(胶原蛋白肽粉哪个品牌好一点儿)</a></li>
                        <li class="py-2"><a href="/html/category/article-7239.htm" title="动物疫苗的定义和分类（动物疫苗的生产原料有哪些,如何取得）">动物疫苗的定义和分类（动物疫苗的生产原料有哪些,如何取得）</a></li>
                        <li class="py-2"><a href="/html/category/article-6131.htm" title="动物医院的面积不得小于多少（动物医院布局设计及分析）">动物医院的面积不得小于多少（动物医院布局设计及分析）</a></li>
                        <li class="py-2"><a href="/html/category/article-7514.htm" title="郑州宠物用品批发进货渠道在哪里（郑州宠物用品批发进货渠道在哪里啊）">郑州宠物用品批发进货渠道在哪里（郑州宠物用品批发进货渠道在哪里啊）</a></li>
                        <li class="py-2"><a href="/html/category/article-7009.htm" title="咸鱼无货源赚钱吗是真的吗（闲鱼无货源赚钱详细教程）">咸鱼无货源赚钱吗是真的吗（闲鱼无货源赚钱详细教程）</a></li>
                        <li class="py-2"><a href="/html/category/article-6130.htm" title="附近动物诊所在哪里（附近动物店）">附近动物诊所在哪里（附近动物店）</a></li>
                        <li class="py-2"><a href="/html/category/article-6641.htm" title="宠物粮食加工厂设备模具会粘吗 宠物粮食加工设备贵吗">宠物粮食加工厂设备模具会粘吗 宠物粮食加工设备贵吗</a></li>
                        <li class="py-2"><a href="/html/category/article-7330.htm" title="昆明宠物门诊报销政策（昆明宠物医院24小时急诊）">昆明宠物门诊报销政策（昆明宠物医院24小时急诊）</a></li>
                        <li class="py-2"><a href="/html/category/article-7147.htm" title="play是什么牌子的衣服贵吗(play是什么牌子的衣服价格)">play是什么牌子的衣服贵吗(play是什么牌子的衣服价格)</a></li>
                        <li class="py-2"><a href="/html/category/article-6778.htm" title="河南兽药厂家排名（河南兽药厂家排名前50强企业）">河南兽药厂家排名（河南兽药厂家排名前50强企业）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">26</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



               </div>
            </div>
        </div>
    </div>
    <!-- about sectuion end -->
        <!-- copyright section start -->
    <div class="copyright_section">
        <div class="container">
            <div class="row">
                <div class="col-sm-12">
                    <p class="copyright_text">
                        Lebanon Address 版权所有
                        <br />
                        Powered by WordPress
                    </p>
                </div>
            </div>
        </div>
    </div>
    <!-- copyright section end -->
    <!-- Javascript files-->
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/jquery.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/popper.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/bootstrap.bundle.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/jquery-3.0.0.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/plugin.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>
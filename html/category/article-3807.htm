<!DOCTYPE html>
<html lang="zh-CN">

<head>
       <link rel="canonical" href="https://lebanonaddress.github.io/html/category/article-3807.htm" />
    <!-- basic -->
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- mobile metas -->
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="viewport" content="initial-scale=1, maximum-scale=1">
    <link rel="icon" href="/assets/addons/xcblog/img/lebanonaddress/favicon.ico" type="image/x-icon"/>
    <!-- site metas -->
    <title>C#中的多播委托和泛型委托_C#教程 - Lebanon Address</title>
        <!-- bootstrap css -->
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/lebanonaddress/bootstrap.min.css">
    <!-- style css -->
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/lebanonaddress/style.css">
    <!-- Responsive-->
    <link rel="stylesheet" href="/assets/addons/xcblog/css/lebanonaddress/responsive.css">
    <!-- Scrollbar Custom CSS -->
    <link rel="stylesheet" href="/assets/addons/xcblog/css/lebanonaddress/jquery.mCustomScrollbar.min.css">
    <!-- Tweaks for older IEs-->
    <link rel="stylesheet" href="https://cdn.bootcdn.net/ajax/libs/font-awesome/4.0.3/css/font-awesome.css">
    <!-- fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600;700&display=swap" rel="stylesheet">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?f480db041fa3a9ffc78a7d6776ae8726";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
       <!-- header section start -->
    <div class="header_section">
        <div class="container">
            <nav class="navbar navbar-expand-lg navbar-light bg-light">
                <div class="logo">
                                        <a href="/">Lebanon Address</a>
                                    </div>
                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarSupportedContent">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
            </nav>
        </div>
    </div>
    <!-- header section end -->
      <!-- services section start -->
      <div class="services_section layout_padding">
         <div class="container">
            <div class="row">
               <div class="col-sm-12">
                  <h1 class="services_taital"><span class="about_icon">C#中的多播委托和泛型委托_C#教程 </h1>
                    <p class="nav-box text-center">
                        <a href="/">首页</a> / <a href="/html/category/">文章分类</span>
                    </p>
               </div>
            </div>
         </div>
      </div>
      <!-- services section end -->
    <!-- about sectuion start -->
    <div class="about_section layout_padding">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                      				  				  				<h2>多播委托</h2> <h3>简介</h3> <ul> <li>每一个委托都是继承自MulticastDelegate，也就是每个都是多播委托。</li> <li>带返回值的多播委托只返回最后一个方法的值</li> <li>多播委托可以用加减号来操作方法的增加或者减少。</li> <li>给委托传递相同方法时 生成的委托实例也是相同的（也就是同一个委托）</li> </ul> <h3>代码实现</h3> <div class="ay1code"> <pre class="brush:csharp;"> 	//声明委托      delegate void MulticastTest();      public class MulticastDelegateTest      {                                  public void Show()          {              MulticastTest multicastTest = new MulticastTest(MethodTest);              multicastTest();                    Action action =new Action(MethodTest);              action = (Action)MulticastDelegate.Combine(action, new Action(MethodTest2));              action = (Action)MulticastDelegate.Combine(action, new Action(MethodTest3));              action = (Action)MulticastDelegate.Remove(action, new Action(MethodTest3));              action();                //等同于上面              action = MethodTest;              action += MethodTest2;              action += MethodTest3;              action -= MethodTest3;                foreach (Action action1 in action.GetInvocationList())              {                  action1();              }              Console.WriteLine("==========");              action();                                            Func&lt;string&gt; func = () =&gt; { return "我是Lambda"; };              func += () =&gt; { return "我是func1"; };              func += () =&gt; { return "我是func2"; };              func += GetTest;              func += GetTest; //给委托传递相同方法时 生成的委托实例也是相同的（也就是同一个委托）                            string result = func();              Console.WriteLine(result);              Console.WriteLine("==========");          }              #region 委托方法          public void MethodTest()          {              Console.WriteLine("我是方法MethodTest()1");          }            public void MethodTest2()          {              Console.WriteLine("我是方法MethodTest()2");          }            public void MethodTest3()          {              Console.WriteLine("我是方法MethodTest()3");          }            public string GetTest()          {              return "我是方法GetTest()";          }          #endregion      }</pre> </div> <h2>泛型委托</h2> <h3>代码实现</h3> <div class="ay1code"> <pre class="brush:csharp;">    //泛型委托声明      delegate void GenericDelegate&lt;T&gt;(T t);      public class GenericDelegate      {          public static void InvokeDelegate()          {              GenericDelegate&lt;string&gt; genericDelegate = new GenericDelegate&lt;string&gt;(Method1);              genericDelegate("我是泛型委托1");                //官方版本（不带返回值）              Action&lt;string&gt; action = new Action&lt;string&gt;(Method1);              action("我是泛型委托1");              //Action&lt;string, string, string, string, string, string, string, string, string, string, string, string, string, string, string, string&gt;                GenericDelegate&lt;int&gt; genericDelegate1 = new GenericDelegate&lt;int&gt;(Method2);              genericDelegate1(2);                //官方版本（带回值）              Func&lt;string, string&gt; func = new Func&lt;string, string&gt;(Method3);              string ret = func("我是带返回值Func委托");              Console.WriteLine( ret );              //Func&lt;string, string, string, string, string, string, string, string, string, string, string, string, string, string, string, string,string&gt;          }                #region 委托方法            public static void Method1(string str)          {              Console.WriteLine(str);          }            public static void Method2(int num)          {              Console.WriteLine("我是泛型委托2 "+num);          }            public static string Method3(string str )          {              return str;          }            #endregion      }</pre> </div> 			
                    <div class="col-md-12 mt-5">
                                                <p>上一个：<a href="/html/category/article-3806.htm">SpringBoot的AutoConfigure自动配置原理</a></p>
                                                <p>下一个：<a href="/html/category/article-3808.htm">串联字符串的Java程序。</a></p>
                                            </div>

                                    </div>
                <div class="col-md-3">
                  <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-8434.htm" title="宠物食品加工厂要投资多少钱（开一个宠物食品加工厂怎么样）">宠物食品加工厂要投资多少钱（开一个宠物食品加工厂怎么样）</a></li>
                        <li class="py-2"><a href="/html/category/article-8297.htm" title="美联众合动物医院是24小时 美联众合动物医院上班时间">美联众合动物医院是24小时 美联众合动物医院上班时间</a></li>
                        <li class="py-2"><a href="/html/category/article-7514.htm" title="郑州宠物用品批发进货渠道在哪里（郑州宠物用品批发进货渠道在哪里啊）">郑州宠物用品批发进货渠道在哪里（郑州宠物用品批发进货渠道在哪里啊）</a></li>
                        <li class="py-2"><a href="/html/category/article-7192.htm" title="领养一只狗要多少钱（领养一只小狗需要准备哪些物品）">领养一只狗要多少钱（领养一只小狗需要准备哪些物品）</a></li>
                        <li class="py-2"><a href="/html/category/article-7193.htm" title="58同城茶杯犬狗领养（58同城宠物狗狗出售茶杯犬）">58同城茶杯犬狗领养（58同城宠物狗狗出售茶杯犬）</a></li>
                        <li class="py-2"><a href="/html/category/article-7791.htm" title="安康游玩攻略(安康必去旅游景点大全)">安康游玩攻略(安康必去旅游景点大全)</a></li>
                        <li class="py-2"><a href="/html/category/article-7147.htm" title="play是什么牌子的衣服贵吗(play是什么牌子的衣服价格)">play是什么牌子的衣服贵吗(play是什么牌子的衣服价格)</a></li>
                        <li class="py-2"><a href="/html/category/article-8112.htm" title="猫咪去跳蚤最简单的方法可以剪掉它的毛?（猫去跳蚤用什么药好）">猫咪去跳蚤最简单的方法可以剪掉它的毛?（猫去跳蚤用什么药好）</a></li>
                        <li class="py-2"><a href="/html/category/article-7836.htm" title="被家猫轻微抓伤有一点渗血要***吗视频（被家猫轻微抓伤有一点渗血要***吗视频讲解）">被家猫轻微抓伤有一点渗血要***吗视频（被家猫轻微抓伤有一点渗血要***吗视频讲解）</a></li>
                        <li class="py-2"><a href="/html/category/article-7238.htm" title="宠物免费领养网站大全（免费领养宠物包邮）">宠物免费领养网站大全（免费领养宠物包邮）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">58</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



               </div>
            </div>
        </div>
    </div>
    <!-- about sectuion end -->
        <!-- copyright section start -->
    <div class="copyright_section">
        <div class="container">
            <div class="row">
                <div class="col-sm-12">
                    <p class="copyright_text">
                        Lebanon Address 版权所有
                        <br />
                        Powered by WordPress
                    </p>
                </div>
            </div>
        </div>
    </div>
    <!-- copyright section end -->
    <!-- Javascript files-->
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/jquery.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/popper.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/bootstrap.bundle.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/jquery-3.0.0.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/plugin.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>
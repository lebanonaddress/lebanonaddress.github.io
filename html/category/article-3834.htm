<!DOCTYPE html>
<html lang="zh-CN">

<head>
       <link rel="canonical" href="https://lebanonaddress.github.io/html/category/article-3834.htm" />
    <!-- basic -->
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- mobile metas -->
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="viewport" content="initial-scale=1, maximum-scale=1">
    <link rel="icon" href="/assets/addons/xcblog/img/lebanonaddress/favicon.ico" type="image/x-icon"/>
    <!-- site metas -->
    <title>C语言简明清晰讲解结构体_C 语言 - Lebanon Address</title>
        <!-- bootstrap css -->
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/lebanonaddress/bootstrap.min.css">
    <!-- style css -->
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/lebanonaddress/style.css">
    <!-- Responsive-->
    <link rel="stylesheet" href="/assets/addons/xcblog/css/lebanonaddress/responsive.css">
    <!-- Scrollbar Custom CSS -->
    <link rel="stylesheet" href="/assets/addons/xcblog/css/lebanonaddress/jquery.mCustomScrollbar.min.css">
    <!-- Tweaks for older IEs-->
    <link rel="stylesheet" href="https://cdn.bootcdn.net/ajax/libs/font-awesome/4.0.3/css/font-awesome.css">
    <!-- fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600;700&display=swap" rel="stylesheet">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?f480db041fa3a9ffc78a7d6776ae8726";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
       <!-- header section start -->
    <div class="header_section">
        <div class="container">
            <nav class="navbar navbar-expand-lg navbar-light bg-light">
                <div class="logo">
                                        <a href="/">Lebanon Address</a>
                                    </div>
                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarSupportedContent">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
            </nav>
        </div>
    </div>
    <!-- header section end -->
      <!-- services section start -->
      <div class="services_section layout_padding">
         <div class="container">
            <div class="row">
               <div class="col-sm-12">
                  <h1 class="services_taital"><span class="about_icon">C语言简明清晰讲解结构体_C 语言 </h1>
                    <p class="nav-box text-center">
                        <a href="/">首页</a> / <a href="/html/category/">文章分类</span>
                    </p>
               </div>
            </div>
         </div>
      </div>
      <!-- services section end -->
    <!-- about sectuion start -->
    <div class="about_section layout_padding">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                      				  				  				<div id="navCategory"> <h5 class="catalogue">目录</h5> <ul class="first_class_ul"> <li><a href="#_label0" rel="nofollow">本质</a></li> <li><a href="#_label1" rel="nofollow">简单使用</a></li> <li><a href="#_label2" rel="nofollow">一些写法</a></li> <li><a href="#_label3" rel="nofollow">我套我自己</a></li> <li><a href="#_label4" rel="nofollow">内存对齐</a></li> <ul class="second_class_ul"> <li><a href="#_lab2_4_0" rel="nofollow">举例-int char char</a></li> <li><a href="#_lab2_4_1" rel="nofollow">举例-char int char</a></li> <li><a href="#_lab2_4_2" rel="nofollow">举例-char char int</a></li> </ul> <li><a href="#_label5" rel="nofollow">由结构体指针访问成员</a></li> <ul class="second_class_ul"></ul> </ul> </div> <p class="maodian"><a name="_label0" rel="nofollow"></a></p> <h2>本质</h2> <p>一些值的集合。</p> <p class="maodian"><a name="_label1" rel="nofollow"></a></p> <h2>简单使用</h2> <div class="ay1code"> <pre class="brush:cpp;">#include &lt;stdio.h&gt;  struct User {  	char uName[20];  	char uPass[20];  };  int main() {  	struct User u1 = {  		"abc","123"  	};  	printf("%s\n", u1.uName);  	printf("%s\n", u1.uPass);  	return 0;  }  </pre> </div> <p>效果：</p> <p style="text-align:center"><img decoding="async" alt="在这里插入图片描述" src="http://img.555519.xyz/uploads3/20220504/52628d36a902bcbb6f3f76c517bd52ac.jpg"></p> <p class="maodian"><a name="_label2" rel="nofollow"></a></p> <h2>一些写法</h2> <p>声明之后，可以立即创建实例。</p> <p>也可以单独声明。</p> <div class="ay1code"> <pre class="brush:cpp;">#include &lt;stdio.h&gt;  struct User {  	char uName[20];  	char uPass[20];  } u1, u2, u3;  struct User u4;  int main() {  	struct User u5;  	return 0;  }  </pre> </div> <p>匿名结构体：我用了，你们别想再用。</p> <div class="ay1code"> <pre class="brush:cpp;">struct {  	char uName[20];  	char uPass[20];  }x;  </pre> </div> <p class="maodian"><a name="_label3" rel="nofollow"></a></p> <h2>我套我自己</h2> <p>只能套指针，因为空间有限。</p> <p>举例：链表。</p> <div class="ay1code"> <pre class="brush:cpp;">#include &lt;stdio.h&gt;  struct Node {  	int val;  	struct Node* next;  };  int main() {  	struct Node a = { 333,NULL };  	struct Node b = { 666,&amp;a };  	printf("%d\n", (*b.next).val);  	return 0;  }  </pre> </div> <p>效果：</p> <p style="text-align:center"><img decoding="async" alt="在这里插入图片描述" src="http://img.555519.xyz/uploads3/20220504/9aef153b7b8cc8286a47cb65d7a803ae.jpg"></p> <p class="maodian"><a name="_label4" rel="nofollow"></a></p> <h2>内存对齐</h2> <p>结构体放成员，是一个一个放的。</p> <p>第一个放到首个地址处。</p> <p>第二个开始，计算一个对齐数，该数是以下两个值的较小者：</p> <p>1，VS的默认值，8。</p> <p>2，该成员所占字节数。</p> <p>实际的偏移量是对齐数的整数倍。</p> <p>最后，结构体的大小是最大对齐数的整数倍。</p> <p class="maodian"><a name="_lab2_4_0" rel="nofollow"></a></p> <h3>举例-int char char</h3> <div class="ay1code"> <pre class="brush:cpp;">#include &lt;stdio.h&gt;  struct A {  	int a;  	char b;  	char c;  };  int main() {  	struct A a = { 1,1,1 };  	printf("%lld", sizeof(a));  	return 0;  }  </pre> </div> <blockquote> <p>效果：8</p> </blockquote> <p style="text-align:center"><img decoding="async" alt="在这里插入图片描述" src="http://img.555519.xyz/uploads3/20220504/15f1b0e61b5769a3f4321d460bd42603.jpg"></p> <p>图解：</p> <p>int放在首位。</p> <p>char占1字节，直接放。</p> <p>第二个char也是。</p> <p>最后长度，按int的字节数的整数倍，也就是8。</p> <p style="text-align:center"><img decoding="async" alt="在这里插入图片描述" src="http://img.555519.xyz/uploads3/20220504/7bccc246a40cf2720218f7fe205f25f3.jpg"></p> <p class="maodian"><a name="_lab2_4_1" rel="nofollow"></a></p> <h3>举例-char int char</h3> <div class="ay1code"> <pre class="brush:cpp;">#include &lt;stdio.h&gt;  struct A {  	char b;  	int a;  	char c;  };  int main() {  	struct A a = { 1,1,1 };  	printf("%lld", sizeof(a));  	return 0;  }</pre> </div> <blockquote> <p>效果：12</p> </blockquote> <p style="text-align:center"><img decoding="async" alt="在这里插入图片描述" src="http://img.555519.xyz/uploads3/20220504/fdb37c65d658de768ceb42e87ba8761e.jpg"></p> <p>图解：</p> <p>char直接放。</p> <p>int从第四个开始放。</p> <p>char直接放。</p> <p>最后长度：从9开始第一个4的倍数，12。</p> <p style="text-align:center"><img decoding="async" alt="在这里插入图片描述" src="http://img.555519.xyz/uploads3/20220504/890c0531ab122c7eab83ea60b0edbe4c.jpg"></p> <p class="maodian"><a name="_lab2_4_2" rel="nofollow"></a></p> <h3>举例-char char int</h3> <div class="ay1code"> <pre class="brush:cpp;">#include &lt;stdio.h&gt;  struct A {  	char b;  	char c;  	int a;  };  int main() {  	struct A a = { 1,1,1 };  	printf("%lld", sizeof(a));  	return 0;  }  </pre> </div> <blockquote> <p>效果：8</p> </blockquote> <p style="text-align:center"><img decoding="async" alt="在这里插入图片描述" src="http://img.555519.xyz/uploads3/20220504/7613c8ac190c8911f02ea2adb21f7428.jpg"></p> <p>图解：两个char直接放。</p> <p>int从下一个4的整数倍，也就是第五个开始放。</p> <p>最后长度：从8开始第一个4的倍数，8。</p> <p style="text-align:center"><img decoding="async" alt="在这里插入图片描述" src="http://img.555519.xyz/uploads3/20220504/6d04a6b5067b426d0628600031cdbec2.jpg"></p> <p class="maodian"><a name="_label5" rel="nofollow"></a></p> <h2>由结构体指针访问成员</h2> <p>就是一种箭头的写法。</p> <div class="ay1code"> <pre class="brush:cpp;">#include &lt;stdio.h&gt;  struct A {  	int a;  };  int main() {  	struct A a = { 333 };  	struct A* b = &amp;a;  	printf("%d\n", b-&gt;a);  	return 0;  }  </pre> </div> <p>效果：</p> <p style="text-align:center"><img decoding="async" alt="在这里插入图片描述" src="http://img.555519.xyz/uploads3/20220504/e030d9f00ea4c7cc908a930bddd6cf84.jpg"></p> 			
                    <div class="col-md-12 mt-5">
                                                <p>上一个：<a href="/html/category/article-3833.htm">oracle not like查询多个条件_MySQL的简单查询</a></p>
                                                <p>下一个：<a href="/html/category/article-3835.htm">pandas中的apply()使用</a></p>
                                            </div>

                                    </div>
                <div class="col-md-3">
                  <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-4042.htm" title="python安装卸载及查看python版本/第三方包版本">python安装卸载及查看python版本/第三方包版本</a></li>
                        <li class="py-2"><a href="/html/category/article-4576.htm" title="下一站是幸福贺繁星元宋分手（下一站幸福大结局）速看，">下一站是幸福贺繁星元宋分手（下一站幸福大结局）速看，</a></li>
                        <li class="py-2"><a href="/html/category/article-4150.htm" title="netty系列之:在netty中使用native传输协议">netty系列之:在netty中使用native传输协议</a></li>
                        <li class="py-2"><a href="/html/category/article-4053.htm" title="Autograd：Pytorch 中的自动微分机制讲解">Autograd：Pytorch 中的自动微分机制讲解</a></li>
                        <li class="py-2"><a href="/html/category/article-4348.htm" title="动物诊疗许可证去哪里办理手续（动物诊疗许可证在哪个部门办理）">动物诊疗许可证去哪里办理手续（动物诊疗许可证在哪个部门办理）</a></li>
                        <li class="py-2"><a href="/html/category/article-4037.htm" title="C++中的匿名对象的概念和使用">C++中的匿名对象的概念和使用</a></li>
                        <li class="py-2"><a href="/html/category/article-4059.htm" title="Android 12图像显示系统简述Allocator/Mapper HAL服务的获取过程">Android 12图像显示系统简述Allocator/Mapper HAL服务的获取过程</a></li>
                        <li class="py-2"><a href="/html/category/article-4121.htm" title="PyTorch查看CUDA支持情况">PyTorch查看CUDA支持情况</a></li>
                        <li class="py-2"><a href="/html/category/article-4041.htm" title="关于信号量Semaphore的acquire与release的说明">关于信号量Semaphore的acquire与release的说明</a></li>
                        <li class="py-2"><a href="/html/category/article-4048.htm" title="【Android笔记】BaseAdapter适配器的介绍、使用及优化（详细）">【Android笔记】BaseAdapter适配器的介绍、使用及优化（详细）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">20</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



               </div>
            </div>
        </div>
    </div>
    <!-- about sectuion end -->
        <!-- copyright section start -->
    <div class="copyright_section">
        <div class="container">
            <div class="row">
                <div class="col-sm-12">
                    <p class="copyright_text">
                        Lebanon Address 版权所有
                        <br />
                        Powered by WordPress
                    </p>
                </div>
            </div>
        </div>
    </div>
    <!-- copyright section end -->
    <!-- Javascript files-->
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/jquery.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/popper.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/bootstrap.bundle.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/jquery-3.0.0.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/plugin.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>
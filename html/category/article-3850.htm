<!DOCTYPE html>
<html lang="zh-CN">

<head>
       <link rel="canonical" href="https://lebanonaddress.github.io/html/category/article-3850.htm" />
    <!-- basic -->
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- mobile metas -->
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="viewport" content="initial-scale=1, maximum-scale=1">
    <link rel="icon" href="/assets/addons/xcblog/img/lebanonaddress/favicon.ico" type="image/x-icon"/>
    <!-- site metas -->
    <title>进程内优雅管理多个服务 - Lebanon Address</title>
        <!-- bootstrap css -->
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/lebanonaddress/bootstrap.min.css">
    <!-- style css -->
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/lebanonaddress/style.css">
    <!-- Responsive-->
    <link rel="stylesheet" href="/assets/addons/xcblog/css/lebanonaddress/responsive.css">
    <!-- Scrollbar Custom CSS -->
    <link rel="stylesheet" href="/assets/addons/xcblog/css/lebanonaddress/jquery.mCustomScrollbar.min.css">
    <!-- Tweaks for older IEs-->
    <link rel="stylesheet" href="https://cdn.bootcdn.net/ajax/libs/font-awesome/4.0.3/css/font-awesome.css">
    <!-- fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600;700&display=swap" rel="stylesheet">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?f480db041fa3a9ffc78a7d6776ae8726";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
       <!-- header section start -->
    <div class="header_section">
        <div class="container">
            <nav class="navbar navbar-expand-lg navbar-light bg-light">
                <div class="logo">
                                        <a href="/">Lebanon Address</a>
                                    </div>
                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarSupportedContent">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
            </nav>
        </div>
    </div>
    <!-- header section end -->
      <!-- services section start -->
      <div class="services_section layout_padding">
         <div class="container">
            <div class="row">
               <div class="col-sm-12">
                  <h1 class="services_taital"><span class="about_icon">进程内优雅管理多个服务 </h1>
                    <p class="nav-box text-center">
                        <a href="/">首页</a> / <a href="/html/category/">文章分类</span>
                    </p>
               </div>
            </div>
         </div>
      </div>
      <!-- services section end -->
    <!-- about sectuion start -->
    <div class="about_section layout_padding">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                      				  				  				<h2 id="前言">前言</h2> <p>在 go-zero 社区里，经常会有同学问，把<code>API gateway</code> 和<code>RPC service</code> 放在同一个进程内可不可以？怎么弄？有时也会有同学把对外服务和消费队列放在一个进程内。咱们姑且不说此种用法合理与否，因为各个公司的业务场景和开发模式的差异，我们就只来看看此类问题怎么解比较优雅。</p> <h2 id="问题举例">问题举例</h2> <p>我们用两个<code>HTTP</code> 服务来举例，我们有这样两个服务，需要启动在一个进程内的两个不同端口。代码如下：</p> <pre><code class="language-go">package main  import (   "fmt"   "net/http" )  func morning(w http.ResponseWriter, req *http.Request) {   fmt.Fprintln(w, "morning!") }  func evening(w http.ResponseWriter, req *http.Request) {   fmt.Fprintln(w, "evening!") }  type Morning struct{}  func (m Morning) Start() {   http.HandleFunc("/morning", morning)   http.ListenAndServe("localhost:8080", nil) }  func (m Morning) Stop() {   fmt.Println("Stop morning service...") }  type Evening struct{}  func (e Evening) Start() {   http.HandleFunc("/evening", evening)   http.ListenAndServe("localhost:8081", nil) }  func (e Evening) Stop() {   fmt.Println("Stop evening service...") }  func main() {   // todo: start both services here }</code></pre> <p>代码是足够简单的，就是有请求<code>morning</code> 接口，服务返回<code>morning!</code>，请求<code>evening</code> 接口，服务返回<code>evening</code> 。让我们来尝试实现一下～</p> <h2 id="第一次尝试">第一次尝试</h2> <p>启动两个服务，不就是把两个服务在<code>main</code> 里都启动一下吗？我们来试试</p> <pre><code class="language-go">func main() {   var morning Morning   morning.Start()   defer morning.Stop()    var evening Evening   evening.Start()   defer evening.Stop() }</code></pre> <p>启动完，我们用<code>curl</code> 来验证一下</p> <pre><code class="language-shell">$ curl -i http://localhost:8080/morning HTTP/1.1 200 OK Date: Mon, 18 Apr 2022 02:10:34 GMT Content-Length: 9 Content-Type: text/plain; charset=utf-8  morning! $ curl -i http://localhost:8081/evening curl: (7) Failed to connect to localhost port 8081 after 4 ms: Connection refused</code></pre> <p>为什么只有<code>morning</code> 成功，而<code>evening</code> 无法请求呢？</p> <p>我们在<code>main</code> 里面加上打印语句试试</p> <pre><code class="language-go">func main() {   fmt.Println("Start morning service...")   var morning Morning   morning.Start()   defer morning.Stop()    fmt.Println("Start evening service...")   var evening Evening   evening.Start()   defer evening.Stop() }</code></pre> <p>重新启动</p> <pre><code class="language-shell">$ go run main.go Start morning service...</code></pre> <p>发现只打印了<code>Start morning service…</code>，原来<code>evening</code> 服务压根没有启动。究其原因，是因为<code>morning.Start()</code> 阻塞了当前<code>goroutine</code>，后续代码就得不到执行了。</p> <h2 id="第二次尝试">第二次尝试</h2> <p>这时，<code>WaitGroup</code> 就可以派上用场了。<code>WaitGroup</code> 顾名思义，就是用来<code>wait</code> 一组操作，等待它们通知可以继续。让我们来尝试一下。</p> <pre><code class="language-go">func main() {   var wg sync.WaitGroup   wg.Add(2)    go func() {     defer wg.Done()     fmt.Println("Start morning service...")     var morning Morning     defer morning.Stop()     morning.Start()   }()    go func() {     defer wg.Done()     fmt.Println("Start evening service...")     var evening Evening     defer evening.Stop()     evening.Start()   }()    wg.Wait() }</code></pre> <p>启动试试</p> <pre><code class="language-shell">$ go run main.go Start evening service... Start morning service...</code></pre> <p>好，两个服务都起来了，我们用<code>curl</code> 验证一下</p> <pre><code class="language-shell">$ curl -i http://localhost:8080/morning HTTP/1.1 200 OK Date: Mon, 18 Apr 2022 02:28:33 GMT Content-Length: 9 Content-Type: text/plain; charset=utf-8  morning! $ curl -i http://localhost:8081/evening HTTP/1.1 200 OK Date: Mon, 18 Apr 2022 02:28:36 GMT Content-Length: 9 Content-Type: text/plain; charset=utf-8  evening!</code></pre> <p>确实都可以了，我们看到我们使用<code>WaitGroup</code> 的流程是</p> <ol> <li>记得我们有几个需要<code>wait</code> 的服务</li> <li>一个一个添加服务</li> <li>等待所有服务结束</li> </ol> <p>让我们看看<code>go-zero</code> 是怎么做的~</p> <h2 id="第三次尝试">第三次尝试</h2> <p>在<code>go-zero</code> 里，我们提供了一个<code>ServiceGroup</code> 工具，方便管理多个服务的启动和停止。让我们看看带入我们的场景是怎么做的。</p> <pre><code class="language-go">import "github.com/zeromicro/go-zero/core/service"  // more code  func main() {   group := service.NewServiceGroup()   defer group.Stop()   group.Add(Morning{})   group.Add(Evening{})   group.Start() }</code></pre> <p>可以看到，代码的可读性好了很多，并且我们也不会不小心算错该给<code>WaitGroup</code> 加几了。并且<code>ServiceGroup</code> 还保证了后启动的服务先<code>Stop</code>，跟<code>defer</code> 效果一致，这样的行为便于资源的清理。</p> <p><code>ServiceGroup</code> 不光只是管理了每个服务的<code>Start/Stop</code>，同时也提供了<code>graceful shutdown</code>，当收到<code>SIGTERM</code> 信号的时候会主动调用每个服务的<code>Stop</code>  方法，对于<code>HTTP</code> 服务，可以通过<code>server.Shutdown</code> 来优雅退出，对于<code>gRPC</code> 服务来说，可以通过<code>server.GracefulStop()</code> 来优雅退出。</p> <h2 id="总结">总结</h2> <p><code>ServiceGroup</code> 的实现其实也是比较简单的，代码一共82行。</p> <pre><code class="language-shell">$ cloc core/service/servicegroup.go ------------------------------------------------------------------ Language        files          blank        comment           code ------------------------------------------------------------------ Go                 1             22             14             82 ------------------------------------------------------------------</code></pre> <p>虽然代码短小精悍，但是在<code>go-zero</code> 里却每个服务（Restful, RPC, MQ）基本都是通过<code>ServiceGroup</code> 来管理的，可以说非常方便，代码值得一读。</p> <h2 id="项目地址">项目地址</h2> <p><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/zeromicro/go-zero"  target="_blank" rel="nofollow">https://github.com/zeromicro/go-zero</a></p> <p>欢迎使用<code>go-zero</code> 并<strong>star</strong> 支持我们！</p> 			
                    <div class="col-md-12 mt-5">
                                                <p>上一个：<a href="/html/category/article-3849.htm">Git基础配置Git用户签名说明详解</a></p>
                                                <p>下一个：<a href="/html/category/article-3851.htm">SOLID原则：解释和实例</a></p>
                                            </div>

                                    </div>
                <div class="col-md-3">
                  <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-4048.htm" title="【Android笔记】BaseAdapter适配器的介绍、使用及优化（详细）">【Android笔记】BaseAdapter适配器的介绍、使用及优化（详细）</a></li>
                        <li class="py-2"><a href="/html/category/article-4469.htm" title="兰州最大的宠物市场是哪里（兰州最大宠物市场地址）">兰州最大的宠物市场是哪里（兰州最大宠物市场地址）</a></li>
                        <li class="py-2"><a href="/html/category/article-4037.htm" title="C++中的匿名对象的概念和使用">C++中的匿名对象的概念和使用</a></li>
                        <li class="py-2"><a href="/html/category/article-4065.htm" title="Zookeeper分布式一致性协议ZAB">Zookeeper分布式一致性协议ZAB</a></li>
                        <li class="py-2"><a href="/html/category/article-4061.htm" title="如何在Android sqlite中删除表？">如何在Android sqlite中删除表？</a></li>
                        <li class="py-2"><a href="/html/category/article-4505.htm" title="动物医院咨询电话号码（动物医院的电话号码）">动物医院咨询电话号码（动物医院的电话号码）</a></li>
                        <li class="py-2"><a href="/html/category/article-4122.htm" title="垃圾收集器与内存分配策略_在线工具">垃圾收集器与内存分配策略_在线工具</a></li>
                        <li class="py-2"><a href="/html/category/article-4149.htm" title="CompletableFuture的使用介绍, CompletableFuture与FutureTask的区别">CompletableFuture的使用介绍, CompletableFuture与FutureTask的区别</a></li>
                        <li class="py-2"><a href="/html/category/article-4043.htm" title="AspNetCore配置多环境log4net配置文件">AspNetCore配置多环境log4net配置文件</a></li>
                        <li class="py-2"><a href="/html/category/article-4058.htm" title="TS语言与JS语言的区别">TS语言与JS语言的区别</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">16</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



               </div>
            </div>
        </div>
    </div>
    <!-- about sectuion end -->
        <!-- copyright section start -->
    <div class="copyright_section">
        <div class="container">
            <div class="row">
                <div class="col-sm-12">
                    <p class="copyright_text">
                        Lebanon Address 版权所有
                        <br />
                        Powered by WordPress
                    </p>
                </div>
            </div>
        </div>
    </div>
    <!-- copyright section end -->
    <!-- Javascript files-->
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/jquery.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/popper.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/bootstrap.bundle.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/jquery-3.0.0.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/plugin.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>
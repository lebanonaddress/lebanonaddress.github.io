<!DOCTYPE html>
<html lang="zh-CN">

<head>
       <link rel="canonical" href="https://lebanonaddress.github.io/html/category/article-3886.htm" />
    <!-- basic -->
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- mobile metas -->
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="viewport" content="initial-scale=1, maximum-scale=1">
    <link rel="icon" href="/assets/addons/xcblog/img/lebanonaddress/favicon.ico" type="image/x-icon"/>
    <!-- site metas -->
    <title>C ++程序，用于实现两个数相乘的Schonhage-Strassen算法 - Lebanon Address</title>
        <!-- bootstrap css -->
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/lebanonaddress/bootstrap.min.css">
    <!-- style css -->
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/lebanonaddress/style.css">
    <!-- Responsive-->
    <link rel="stylesheet" href="/assets/addons/xcblog/css/lebanonaddress/responsive.css">
    <!-- Scrollbar Custom CSS -->
    <link rel="stylesheet" href="/assets/addons/xcblog/css/lebanonaddress/jquery.mCustomScrollbar.min.css">
    <!-- Tweaks for older IEs-->
    <link rel="stylesheet" href="https://cdn.bootcdn.net/ajax/libs/font-awesome/4.0.3/css/font-awesome.css">
    <!-- fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600;700&display=swap" rel="stylesheet">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?f480db041fa3a9ffc78a7d6776ae8726";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
       <!-- header section start -->
    <div class="header_section">
        <div class="container">
            <nav class="navbar navbar-expand-lg navbar-light bg-light">
                <div class="logo">
                                        <a href="/">Lebanon Address</a>
                                    </div>
                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarSupportedContent">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
            </nav>
        </div>
    </div>
    <!-- header section end -->
      <!-- services section start -->
      <div class="services_section layout_padding">
         <div class="container">
            <div class="row">
               <div class="col-sm-12">
                  <h1 class="services_taital"><span class="about_icon">C ++程序，用于实现两个数相乘的Schonhage-Strassen算法 </h1>
                    <p class="nav-box text-center">
                        <a href="/">首页</a> / <a href="/html/category/">文章分类</span>
                    </p>
               </div>
            </div>
         </div>
      </div>
      <!-- services section end -->
    <!-- about sectuion start -->
    <div class="about_section layout_padding">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                      				  				  				<p>Schonhage-Strassen算法用于将两个数字相乘。SchonhageStrassen算法是用于大整数的渐近快速乘法算法。实际上，对于超过2<sup>2</sup><sup>15</sup>至2<sup>217</sup>（十进制10,000到40,000）的数字，Schonhage-Strassen算法开始胜过karatsuba和Toom-CooK等旧方法。</p> <h2>算法</h2> <pre>Begin &nbsp;&nbsp;&nbsp;function&nbsp;noOfDigit(&nbsp;x) &nbsp;&nbsp;&nbsp;Declare&nbsp;a&nbsp;variable&nbsp;n&nbsp;and&nbsp;assign&nbsp;n&nbsp;=&nbsp;0; &nbsp;&nbsp;&nbsp;while&nbsp;(x&nbsp;&gt;&nbsp;0) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;=&nbsp;x&nbsp;/10 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Increment&nbsp;n &nbsp;&nbsp;&nbsp;return&nbsp;n End  Begin &nbsp;&nbsp;&nbsp;Algorithm&nbsp;for&nbsp;schonhageStrassenMultiplication: &nbsp;&nbsp;&nbsp;schonhageStrassenMultiplication(a,&nbsp;b,&nbsp;n,&nbsp;m) &nbsp;&nbsp;&nbsp;define&nbsp;an&nbsp;array&nbsp;linearConvolution[n&nbsp;+&nbsp;m&nbsp;-&nbsp;1] &nbsp;&nbsp;&nbsp;for&nbsp;i&nbsp;=&nbsp;0&nbsp;to&nbsp;(n&nbsp;+&nbsp;m&nbsp;-&nbsp;1)-1 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linearConvolution[i]&nbsp;=&nbsp;0; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;long&nbsp;p&nbsp;=&nbsp;a &nbsp;&nbsp;&nbsp;for&nbsp;i&nbsp;=&nbsp;0&nbsp;to&nbsp;m-1 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a&nbsp;=&nbsp;p &nbsp;&nbsp;&nbsp;for&nbsp;j&nbsp;=&nbsp;0&nbsp;to&nbsp;n-1 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linearConvolution[i&nbsp;+&nbsp;j]&nbsp;+=&nbsp;(b&nbsp;mod&nbsp;10)&nbsp;*&nbsp;(a&nbsp;mod&nbsp;10); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a&nbsp;/=&nbsp;10 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b&nbsp;/=&nbsp;10 &nbsp;&nbsp;&nbsp;for&nbsp;i&nbsp;=&nbsp;(n&nbsp;+&nbsp;m&nbsp;-&nbsp;2)&nbsp;to&nbsp;0 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Print&nbsp;linearConvolution[i] &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;long&nbsp;product&nbsp;=&nbsp;0 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nextCarry&nbsp;=&nbsp;0,&nbsp;base&nbsp;=&nbsp;1 &nbsp;&nbsp;&nbsp;for&nbsp;i&nbsp;=&nbsp;0&nbsp;to&nbsp;(n&nbsp;+&nbsp;m&nbsp;-&nbsp;1)-1 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linearConvolution[i]&nbsp;+=&nbsp;nextCarry; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;product&nbsp;=&nbsp;product&nbsp;+&nbsp;(base&nbsp;*&nbsp;(linearConvolution[i]&nbsp;%&nbsp;10)); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nextCarry&nbsp;=&nbsp;linearConvolution[i]&nbsp;/&nbsp;10; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;base&nbsp;*=&nbsp;10; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Print&nbsp;the&nbsp;product&nbsp;of&nbsp;numbers. End</pre> <h2>范例程式码</h2> <pre>#include&nbsp;&lt;iostream&gt; using&nbsp;namespace&nbsp;std; int&nbsp;noOfDigit(long&nbsp;x)&nbsp;{ &nbsp;&nbsp;&nbsp;int&nbsp;n&nbsp;=&nbsp;0; &nbsp;&nbsp;&nbsp;while&nbsp;(x&nbsp;&gt;&nbsp;0)&nbsp;{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;/=&nbsp;10; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n++; &nbsp;&nbsp;&nbsp;} &nbsp;&nbsp;&nbsp;return&nbsp;n; } void&nbsp;schonhageStrassenMultiplication(long&nbsp;a,&nbsp;long&nbsp;b,&nbsp;int&nbsp;n,&nbsp;int&nbsp;m)&nbsp;{ &nbsp;&nbsp;&nbsp;int&nbsp;linearConvolution[n&nbsp;+&nbsp;m&nbsp;-&nbsp;1]; &nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;(n&nbsp;+&nbsp;m&nbsp;-&nbsp;1);&nbsp;i++) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linearConvolution[i]&nbsp;=&nbsp;0; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;long&nbsp;p&nbsp;=&nbsp;a; &nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;m;&nbsp;i++)&nbsp;{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a&nbsp;=&nbsp;p; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;j&nbsp;=&nbsp;0;&nbsp;j&nbsp;&lt;&nbsp;n;&nbsp;j++)&nbsp;{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linearConvolution[i&nbsp;+&nbsp;j]&nbsp;+=&nbsp;(b&nbsp;%&nbsp;10)&nbsp;*&nbsp;(a&nbsp;%&nbsp;10); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a&nbsp;/=&nbsp;10; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b&nbsp;/=&nbsp;10; &nbsp;&nbsp;&nbsp;} &nbsp;&nbsp;&nbsp;cout&nbsp;&lt;&lt;&nbsp;"The&nbsp;Linear&nbsp;Convolution&nbsp;is:&nbsp;(&nbsp;"; &nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i&nbsp;=&nbsp;(n&nbsp;+&nbsp;m&nbsp;-&nbsp;2);&nbsp;i&nbsp;&gt;=&nbsp;0;&nbsp;i--)&nbsp;{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cout&nbsp;&lt;&lt;&nbsp;linearConvolution[i]&nbsp;&lt;&lt;&nbsp;"&nbsp;"; &nbsp;&nbsp;&nbsp;} &nbsp;&nbsp;&nbsp;cout&nbsp;&lt;&lt;&nbsp;")"; &nbsp;&nbsp;&nbsp;long&nbsp;product&nbsp;=&nbsp;0; &nbsp;&nbsp;&nbsp;int&nbsp;nextCarry&nbsp;=&nbsp;0,&nbsp;base&nbsp;=&nbsp;1; &nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;n&nbsp;+&nbsp;m&nbsp;-&nbsp;1;&nbsp;i++)&nbsp;{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linearConvolution[i]&nbsp;+=&nbsp;nextCarry; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;product&nbsp;=&nbsp;product&nbsp;+&nbsp;(base&nbsp;*&nbsp;(linearConvolution[i]&nbsp;%&nbsp;10)); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nextCarry&nbsp;=&nbsp;linearConvolution[i]&nbsp;/&nbsp;10; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;base&nbsp;*=&nbsp;10; &nbsp;&nbsp;&nbsp;} &nbsp;&nbsp;&nbsp;cout&nbsp;&lt;&lt;&nbsp;"\nThe&nbsp;Product&nbsp;of&nbsp;the&nbsp;numbers&nbsp;is:&nbsp;"&nbsp;&lt;&lt;&nbsp;product; } int&nbsp;main(int&nbsp;argc,&nbsp;char&nbsp;**argv)&nbsp;{ &nbsp;&nbsp;&nbsp;cout&nbsp;&lt;&lt;&nbsp;"输入数字："; &nbsp;&nbsp;&nbsp;long&nbsp;a,&nbsp;b; &nbsp;&nbsp;&nbsp;cin&nbsp;&gt;&gt;&nbsp;a&nbsp;&gt;&gt;&nbsp;b; &nbsp;&nbsp;&nbsp;int&nbsp;n&nbsp;=&nbsp;noOfDigit(a); &nbsp;&nbsp;&nbsp;int&nbsp;m&nbsp;=&nbsp;noOfDigit(b); &nbsp;&nbsp;&nbsp;schonhageStrassenMultiplication(a,&nbsp;b,&nbsp;n,&nbsp;m); }</pre> <p>输出结果</p> <pre>输入数字：1234&nbsp;5679 The&nbsp;Linear&nbsp;Convolution&nbsp;is:&nbsp;(&nbsp;5&nbsp;16&nbsp;34&nbsp;61&nbsp;63&nbsp;55&nbsp;36&nbsp;) The&nbsp;Product&nbsp;of&nbsp;the&nbsp;numbers&nbsp;is:&nbsp;7007886</pre> <div></div> 			
                    <div class="col-md-12 mt-5">
                                                <p>上一个：<a href="/html/category/article-3885.htm">es6操作数组方法</a></p>
                                                <p>下一个：<a href="/html/category/article-3887.htm">windows kubectl安装配置</a></p>
                                            </div>

                                    </div>
                <div class="col-md-3">
                  <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-4019.htm" title="os.walk函数">os.walk函数</a></li>
                        <li class="py-2"><a href="/html/category/article-4318.htm" title="动物打疫苗去哪里预约呢（动物打疫苗去哪里预约呢）">动物打疫苗去哪里预约呢（动物打疫苗去哪里预约呢）</a></li>
                        <li class="py-2"><a href="/html/category/article-4027.htm" title="前端需要了解的颜色模型，RGB、HSL和HSV_在线工具">前端需要了解的颜色模型，RGB、HSL和HSV_在线工具</a></li>
                        <li class="py-2"><a href="/html/category/article-4066.htm" title="Go汇编语法和MatrixOne使用介绍">Go汇编语法和MatrixOne使用介绍</a></li>
                        <li class="py-2"><a href="/html/category/article-4020.htm" title="spring schedule 配置多任务动态 cron 【增删启停】">spring schedule 配置多任务动态 cron 【增删启停】</a></li>
                        <li class="py-2"><a href="/html/category/article-4122.htm" title="垃圾收集器与内存分配策略_在线工具">垃圾收集器与内存分配策略_在线工具</a></li>
                        <li class="py-2"><a href="/html/category/article-4044.htm" title="python2字符串编码方式_一、基础部分-2.字符串编码">python2字符串编码方式_一、基础部分-2.字符串编码</a></li>
                        <li class="py-2"><a href="/html/category/article-4026.htm" title="ES6可选链操作符和空值合并运算符">ES6可选链操作符和空值合并运算符</a></li>
                        <li class="py-2"><a href="/html/category/article-4043.htm" title="AspNetCore配置多环境log4net配置文件">AspNetCore配置多环境log4net配置文件</a></li>
                        <li class="py-2"><a href="/html/category/article-4055.htm" title="Token验证JWT方法">Token验证JWT方法</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">6</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



               </div>
            </div>
        </div>
    </div>
    <!-- about sectuion end -->
        <!-- copyright section start -->
    <div class="copyright_section">
        <div class="container">
            <div class="row">
                <div class="col-sm-12">
                    <p class="copyright_text">
                        Lebanon Address 版权所有
                        <br />
                        Powered by WordPress
                    </p>
                </div>
            </div>
        </div>
    </div>
    <!-- copyright section end -->
    <!-- Javascript files-->
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/jquery.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/popper.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/bootstrap.bundle.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/jquery-3.0.0.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/plugin.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>
<!DOCTYPE html>
<html lang="zh-CN">

<head>
       <link rel="canonical" href="https://lebanonaddress.github.io/html/category/article-3891.htm" />
    <!-- basic -->
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- mobile metas -->
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="viewport" content="initial-scale=1, maximum-scale=1">
    <link rel="icon" href="/assets/addons/xcblog/img/lebanonaddress/favicon.ico" type="image/x-icon"/>
    <!-- site metas -->
    <title>网络协议之:socket协议详解之Datagram Socket - Lebanon Address</title>
        <!-- bootstrap css -->
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/lebanonaddress/bootstrap.min.css">
    <!-- style css -->
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/lebanonaddress/style.css">
    <!-- Responsive-->
    <link rel="stylesheet" href="/assets/addons/xcblog/css/lebanonaddress/responsive.css">
    <!-- Scrollbar Custom CSS -->
    <link rel="stylesheet" href="/assets/addons/xcblog/css/lebanonaddress/jquery.mCustomScrollbar.min.css">
    <!-- Tweaks for older IEs-->
    <link rel="stylesheet" href="https://cdn.bootcdn.net/ajax/libs/font-awesome/4.0.3/css/font-awesome.css">
    <!-- fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600;700&display=swap" rel="stylesheet">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?f480db041fa3a9ffc78a7d6776ae8726";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
       <!-- header section start -->
    <div class="header_section">
        <div class="container">
            <nav class="navbar navbar-expand-lg navbar-light bg-light">
                <div class="logo">
                                        <a href="/">Lebanon Address</a>
                                    </div>
                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarSupportedContent">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
            </nav>
        </div>
    </div>
    <!-- header section end -->
      <!-- services section start -->
      <div class="services_section layout_padding">
         <div class="container">
            <div class="row">
               <div class="col-sm-12">
                  <h1 class="services_taital"><span class="about_icon">网络协议之:socket协议详解之Datagram Socket </h1>
                    <p class="nav-box text-center">
                        <a href="/">首页</a> / <a href="/html/category/">文章分类</span>
                    </p>
               </div>
            </div>
         </div>
      </div>
      <!-- services section end -->
    <!-- about sectuion start -->
    <div class="about_section layout_padding">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                      				  				  				<div class="toc"> <div class="toc-container-header">目录</div> <ul> <li>简介</li> <li>什么是Datagram Socket</li> <li>使用socat来创建UDP服务</li> <li>使用ss命令来监控Datagram Sockets</li> <li>使用nc建立和UDP Socket的连接</li> <li>总结</li> </ul> </div> <h1 id="简介">简介</h1> <p>上一篇文章我们讲解了Socket的分类和最常用到的Stream Socket，Stream Socket一般是基于TCP协议的，所以我们经常在web服务中能够看到他们的身影。当然TCP协议有个孪生兄弟叫做UDP，那么基于UDP来做传输协议的socket协议就叫做Datagram Socket，今天我们一起来详细了解一下Datagram Socket。</p> <h1 id="什么是datagram-socket">什么是Datagram Socket</h1> <p>和有连接的Stream Socket不同，Datagram Socket是无连接的。有连接的Stream Socket表明这个socket是稳定可靠的，所以我们可以在Stream socket中进行稳定的数据传输，当然这个稳定是说数据包不会丢失，但是并不一定能够确保数据包不被篡改。</p> <p>Datagram Socket这种无连接的通常被用在容许数据部分丢失的场景，比如语音、视频等等，无连接的好处就是不需要TCP那样复杂的建立连接的步骤，所以相对而言更加简单。</p> <p>Datagram Socket通常使用的就是UDP协议作为底层的数据传输协议。</p> <p>对于UDP来说，因为UDP协议本身并不会保证数据的顺序和数据异常的处理，这些都需要在应用程序中自己实现。</p> <p>常见的UDP应用有DNS(Domain Name System)服务，NTP(Network Time Protocol)服务等等。</p> <p>在JDK的java.net包中提供了对Datagram Socket的封装,在其中定义了三个连接的状态：</p> <pre><code>class DatagramSocket implements java.io.Closeable {     ...     static final int ST_NOT_CONNECTED = 0;     static final int ST_CONNECTED = 1;     static final int ST_CONNECTED_NO_IMPL = 2;     ... }</code></pre> <p>分别表示没有建立连接，建立了连接和建立了连接，但是还没有到实现的level。</p> <p>另外，在DatagramSocket中还包含了一个连接的地址和端口：</p> <pre><code>InetAddress connectedAddress = null; int connectedPort = -1;</code></pre> <h1 id="使用socat来创建udp服务">使用socat来创建UDP服务</h1> <blockquote> <p>注意，在使用后续的命令之前，需要在unix环境中执行安装命令：yum install iproute2 netcat-openbsd socat</p> </blockquote> <p>和之前的Stream Socket一样，我们也可以使用socat命令，来建立一个UDP服务器，我们需要用到socat的下面几个参数：</p> <pre><code>      udp4-listen:<port>        groups=FD,SOCKET,LISTEN,CHILD,RANGE,IP4,UDP       udp6-listen:<port>        groups=FD,SOCKET,LISTEN,CHILD,RANGE,IP6,UDP</code></pre> <p>我们需要监听udp4和udp6的数据，所以这里使用 udp4-listen和udp6-listen两个参数。</p> <p>后面的端口号可以自定义，这里我们还是使用同样的8888端口，对应的命令如下：</p> <pre><code>socat UDP4-LISTEN:8888,fork /dev/null& socat UDP6-LISTEN:8888,ipv6only=1,fork /dev/null&</code></pre> <p>上面的命令，我们在8888端口上监听UDP4和UDP6的连接信息，其中fork参数表示程序在接收到程序包之后继续运行，如果不用fork，那么程序会自动退出。</p> <p>socat后面本来要接一个bi-address，这里我们使用/dev/null，表示丢弃掉所有的income信息。</p> <p>UDP6-LISTEN有个特殊的参数叫做ipv6only，表示收到的数据包不要发送到IPv4-mapped IPv6 addresses。</p> <p>什么是IPv4-mapped IPv6 addresses？ 简单点说就是将IPv4映射到了IPv6的地址中。</p> <p>执行上述命令，我们会得到下面的输出：</p> <pre><code>[1] 16174 [2] 16184</code></pre> <p>因为是后台执行，所以我们返回了进程的ID。</p> <h1 id="使用ss命令来监控datagram-sockets">使用ss命令来监控Datagram Sockets</h1> <p>ss命令可以用来检查socket的状态，这里我们需要用到ss的这样几个参数：</p> <pre><code>   -4, --ipv4          display only IP version 4 sockets    -u, --udp           display only UDP sockets    -l, --listening     display listening sockets    -n, --numeric       don't resolve service names</code></pre> <p>因为我们只监听ipv4和ipv6的数据，所以这里我们用-4和-6这两个参数。</p> <p>另外因为只需要监听udp sockets，所以需要使用-u参数。</p> <p>因为是监听，所以使用-l参数，最后我们希望看到具体的数字，而不是被解析成了服务名，所以这里使用-n参数。</p> <p>我们使用下面的命令看看结果：</p> <pre><code>ss -4 -uln</code></pre> <p>可以得到下面的结果：</p> <pre><code>State       Recv-Q Send-Q                      Local Address:Port                                     Peer Address:Port               UNCONN      0      0                                       *:8888                                                *:*</code></pre> <p>上面的命令只监听了Ipv4，我们再看看Ipv6：</p> <pre><code>ss -6 -uln</code></pre> <p>可以得到下面的结果：</p> <pre><code>State       Recv-Q Send-Q                      Local Address:Port                                     Peer Address:Port               UNCONN      0      0                                      :::8888                                               :::*</code></pre> <p>和Ipv4的很类似，表示我们在Ipv6上监听到了端口8888。</p> <h1 id="使用nc建立和udp-socket的连接">使用nc建立和UDP Socket的连接</h1> <p>我们已经建立好了了监听UDP连接的服务器，接下来我们尝试使用nc命令来进行连接。</p> <p>nc是Ncat的简称，是一个非常小并且高效的网络工具。我们来看下本例子中会用到的参数：</p> <pre><code>  -4                         Use IPv4 only   -6                         Use IPv6 only   -u, --udp                  Use UDP instead of default TCP   -v, --verbose              Set verbosity level (can be used several times)   -z                         Zero-I/O mode, report connection status only</code></pre> <p>因为需要连接到Ipv4和Ipv6，所以需要-4和-6参数。</p> <p>默认情况下nc使用的是TCP协议，如果要使用udp则需要使用-u这个参数。</p> <p>另外我们需要输出详细的信息，所以需要-v参数，最后我们直接建立连接，并不发送任何数据，所以这里使用-z参数，我们执行一下来看看效果：</p> <pre><code>nc -4 -u -vz 127.0.0.1 8888</code></pre> <p>看看下面的输出结果：</p> <pre><code>Ncat: Version 7.50 ( https://nmap.org/ncat ) Ncat: Connected to 127.0.0.1:8888. Ncat: UDP packet sent successfully Ncat: 1 bytes sent, 0 bytes received in 2.02 seconds.</code></pre> <p>表示UDP连接成功。</p> <p>同样的，我们可以使用下面的命令来连接到UDP socket：</p> <pre><code>nc -6 -u -vz ::1 8888</code></pre> <p>其中::1表示的是本机的ipv6地址.</p> <p>可以得到下面的结果：</p> <pre><code>Ncat: Version 7.50 ( https://nmap.org/ncat ) Ncat: Connected to ::1:8888. Ncat: UDP packet sent successfully Ncat: 1 bytes sent, 0 bytes received in 2.02 seconds.</code></pre> <p>表示UDP连接成功。</p> <h1 id="总结">总结</h1> <p>本文讲解了datagram socket的基本概念，并且使用一些unix的基本命令来构建了udp服务器和客户端，方便大家理解。</p> 			
                    <div class="col-md-12 mt-5">
                                                <p>上一个：<a href="/html/category/article-3890.htm">PHP回调/可调用对象详解</a></p>
                                                <p>下一个：<a href="/html/category/article-3892.htm">k8s入门之Ingress</a></p>
                                            </div>

                                    </div>
                <div class="col-md-3">
                  <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-7239.htm" title="动物疫苗的定义和分类（动物疫苗的生产原料有哪些,如何取得）">动物疫苗的定义和分类（动物疫苗的生产原料有哪些,如何取得）</a></li>
                        <li class="py-2"><a href="/html/category/article-7514.htm" title="郑州宠物用品批发进货渠道在哪里（郑州宠物用品批发进货渠道在哪里啊）">郑州宠物用品批发进货渠道在哪里（郑州宠物用品批发进货渠道在哪里啊）</a></li>
                        <li class="py-2"><a href="/html/category/article-7054.htm" title="动物医院科室分类（动物医院科室分类标准）">动物医院科室分类（动物医院科室分类标准）</a></li>
                        <li class="py-2"><a href="/html/category/article-7607.htm" title="宠物粮食哪里批发最便宜的呢（宠物粮食哪里批发最便宜的呢图片）">宠物粮食哪里批发最便宜的呢（宠物粮食哪里批发最便宜的呢图片）</a></li>
                        <li class="py-2"><a href="/html/category/article-7146.htm" title="妙三多三联疫苗打几针（妙三多三联是什么意思）">妙三多三联疫苗打几针（妙三多三联是什么意思）</a></li>
                        <li class="py-2"><a href="/html/category/article-7515.htm" title="动物医院诊疗范围有哪些类型 动物医院诊疗范围有哪些类型的">动物医院诊疗范围有哪些类型 动物医院诊疗范围有哪些类型的</a></li>
                        <li class="py-2"><a href="/html/category/article-7193.htm" title="58同城茶杯犬狗领养（58同城宠物狗狗出售茶杯犬）">58同城茶杯犬狗领养（58同城宠物狗狗出售茶杯犬）</a></li>
                        <li class="py-2"><a href="/html/category/article-7376.htm" title="动物疫苗代理 动物疫苗代理需要什么资质">动物疫苗代理 动物疫苗代理需要什么资质</a></li>
                        <li class="py-2"><a href="/html/category/article-6641.htm" title="宠物粮食加工厂设备模具会粘吗 宠物粮食加工设备贵吗">宠物粮食加工厂设备模具会粘吗 宠物粮食加工设备贵吗</a></li>
                        <li class="py-2"><a href="/html/category/article-6687.htm" title="日本姓猪的名字大全（速看）日本人姓猪，美丽背后，服部直臣，">日本姓猪的名字大全（速看）日本人姓猪，美丽背后，服部直臣，</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">36</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



               </div>
            </div>
        </div>
    </div>
    <!-- about sectuion end -->
        <!-- copyright section start -->
    <div class="copyright_section">
        <div class="container">
            <div class="row">
                <div class="col-sm-12">
                    <p class="copyright_text">
                        Lebanon Address 版权所有
                        <br />
                        Powered by WordPress
                    </p>
                </div>
            </div>
        </div>
    </div>
    <!-- copyright section end -->
    <!-- Javascript files-->
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/jquery.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/popper.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/bootstrap.bundle.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/jquery-3.0.0.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/plugin.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>
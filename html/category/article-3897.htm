<!DOCTYPE html>
<html lang="zh-CN">

<head>
       <link rel="canonical" href="https://lebanonaddress.github.io/html/category/article-3897.htm" />
    <!-- basic -->
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- mobile metas -->
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="viewport" content="initial-scale=1, maximum-scale=1">
    <link rel="icon" href="/assets/addons/xcblog/img/lebanonaddress/favicon.ico" type="image/x-icon"/>
    <!-- site metas -->
    <title>springcloud解决使用feign调用服务 header参数传递的问题 - Lebanon Address</title>
        <!-- bootstrap css -->
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/lebanonaddress/bootstrap.min.css">
    <!-- style css -->
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/lebanonaddress/style.css">
    <!-- Responsive-->
    <link rel="stylesheet" href="/assets/addons/xcblog/css/lebanonaddress/responsive.css">
    <!-- Scrollbar Custom CSS -->
    <link rel="stylesheet" href="/assets/addons/xcblog/css/lebanonaddress/jquery.mCustomScrollbar.min.css">
    <!-- Tweaks for older IEs-->
    <link rel="stylesheet" href="https://cdn.bootcdn.net/ajax/libs/font-awesome/4.0.3/css/font-awesome.css">
    <!-- fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600;700&display=swap" rel="stylesheet">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?f480db041fa3a9ffc78a7d6776ae8726";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
       <!-- header section start -->
    <div class="header_section">
        <div class="container">
            <nav class="navbar navbar-expand-lg navbar-light bg-light">
                <div class="logo">
                                        <a href="/">Lebanon Address</a>
                                    </div>
                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarSupportedContent">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
            </nav>
        </div>
    </div>
    <!-- header section end -->
      <!-- services section start -->
      <div class="services_section layout_padding">
         <div class="container">
            <div class="row">
               <div class="col-sm-12">
                  <h1 class="services_taital"><span class="about_icon">springcloud解决使用feign调用服务 header参数传递的问题 </h1>
                    <p class="nav-box text-center">
                        <a href="/">首页</a> / <a href="/html/category/">文章分类</span>
                    </p>
               </div>
            </div>
         </div>
      </div>
      <!-- services section end -->
    <!-- about sectuion start -->
    <div class="about_section layout_padding">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                      				  				  				<div id="content_views" class="htmledit_views"> <p>1. 遇到的问题</p> <p>测试人员发现，在用户查看自己的一个收藏功能时，显示用户没有登录。</p> <p>2.问题原因</p> <p>收藏服务A的一个功能，方法里面调用了另外一个服务B的接口，由于还没有做单点登录系统，需要在同一个注册中心上注册的服务之间传递header参数里面的一个token，导致服务B里面的方法接受的请求header里面没有token，因此服务B的方法抛出异常【用户未登录】，然后把结果链式传递到了服务A，最终给用户显示【用户未登录】</p> <p>3.解决思路</p> <p>方法1.做一个单点登录系统，目前人手不够，还没时间研究研究，</p> <p>方法2.通过feign调用其他服务的时候，把服务A的header参数传递到服务B( 目前通过2解决掉)</p> <p>4.步骤</p> <p>①eureka注册中心上现在有三个服务 ：网关gateway-service，用户user-service 收藏collect-service</p> <p>②前端调用对应的服务其实都是经过了gateway-service，前置过滤器来判断token信息，存储到一次请求HttpServletRequest中了，并把token信息存储到redis里面缓存起来 ，gateway-service中的guolv之后存储token信息逻辑如下：</p> <pre class="has"><code class="language-java">@Override 	public Object run() throws ZuulException { 		RequestContext ctx = RequestContext.getCurrentContext(); 		HttpServletRequest req = ctx.getRequest(); 		String token = req.getHeader("token"); 		log.info("===========登录令牌 = {}", token); 		if (StringUtils.isNotBlank(token)) { 			String json = stringRedisTemplate.opsForValue().get("token" + token); 			log.info("===========登录用户缓存信息：{}", json); 			if (StringUtils.isNotBlank(json)) { 				ctx.setSendZuulResponse(true); 				ctx.setResponseStatusCode(HttpStatus.SC_OK); 				try { 					ctx.addZuulRequestHeader("USER_REDIS_KEY", 							URLEncoder.encode(JSONObject.toJSONString(json), "UTF-8")); 				} catch (UnsupportedEncodingException e) { 					e.printStackTrace(); 				} 				return null; 			} 		} 	 		// 返回错误提示信息 		log.error("===========请求失败401"); 		ctx.setSendZuulResponse(false); 		ctx.setResponseStatusCode(HttpStatus.SC_UNAUTHORIZED); 		String responseBody = JSON.toJSON(Result.error(ResponseCode.NO_ACCESS)).toString(); 		ctx.setResponseBody(responseBody); 		ctx.getResponse().setContentType("application/json;charset=UTF-8"); 		return null; 	}</code></pre> <p>③由于之前在使用feign调用的其他服务时候，直接使用的对方的服务名来调用，没有经过网关服务，其实想要通过feign之间 的服务调用经过网关，很简单，把服务名都配置成网关服务名即可，让eureka找到gateway-service后，然后让gate-service来帮你找对应的实例&nbsp;，collect-service中 feignClient接口如下：</p> <pre class="has"><code class="language-java">package com.client;  import com.util.Result; import com.form.UserCollectCheckWxappForm; import org.springframework.cloud.openfeign.FeignClient; import org.springframework.web.bind.annotation.PostMapping;  @FeignClient("gateway-service") //之前这里写的是user-service，换成网关服务gate-service，这样就经过网关了 public interface UserServiceClient {      // 这里想要调用的服务加上user-service即可     @PostMapping(value = "user-service/easysale/wxapp/collect/v1/checkHasCollect")     Result checkHasCollect(UserCollectCheckWxappForm userCollectCheckWxappForm);  }</code></pre> <p>④collect-service中 配置feign拦截器，使其传递header中token参数</p> <pre class="has"><code class="language-java">package com.config;  import feign.RequestInterceptor; import feign.RequestTemplate; import lombok.extern.slf4j.Slf4j; import org.springframework.context.annotation.Configuration; import org.springframework.web.context.request.RequestContextHolder; import org.springframework.web.context.request.ServletRequestAttributes;  import javax.servlet.http.HttpServletRequest; import java.util.Enumeration; import java.util.Objects;  @Slf4j @Configuration public class FeignConfig implements RequestInterceptor {      @Override     public void apply(RequestTemplate requestTemplate) {         ServletRequestAttributes attributes = (ServletRequestAttributes) RequestContextHolder.getRequestAttributes();          log.info("house-server, attributes:{}",attributes);         if (Objects.isNull(attributes)) return;          HttpServletRequest request = attributes.getRequest();         Enumeration&lt;String&gt; headerNames = request.getHeaderNames();         log.info("house-server, headerNames:{}",headerNames);         if (headerNames != null) {             while (headerNames.hasMoreElements()) {                 String name = headerNames.nextElement();                 String values = request.getHeader(name);                 requestTemplate.header(name, values);             }         }     } }</code></pre> <p>⑤还有一点别忘了，在yml文件配置熔断策略，SEMAPHORE，这能保障在一次链路请求中........（其实这里我还也还没搞清楚，后续再聊。。。）</p> <pre class="has"><code>hystrix:   command:     default:       execution:         isolation:           strategy: SEMAPHORE           thread:             timeoutInMilliseconds: 60000</code></pre> <p>⑥重启网关服务gateway-service，和collect-service 测试ok，解决测试问题</p> <p>5.后记</p> <p>这个问题当时搞了我一下午，看来对这些框架原理还不是特别熟，不过能解决这个，还是有点小收获滴。</p> </div> 			
                    <div class="col-md-12 mt-5">
                                                <p>上一个：<a href="/html/category/article-3896.htm">vue实现可拖拽div大小的方法_vue.js</a></p>
                                                <p>下一个：<a href="/html/category/article-3898.htm">mybatis查询一对多返回List＜String＞集合</a></p>
                                            </div>

                                    </div>
                <div class="col-md-3">
                  <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-4066.htm" title="Go汇编语法和MatrixOne使用介绍">Go汇编语法和MatrixOne使用介绍</a></li>
                        <li class="py-2"><a href="/html/category/article-4039.htm" title="CoreWCF 1.0 正式发布，支持 .NET Core 和 .NET 5+ 的 WCF &#8211; 冠军 _在线工具">CoreWCF 1.0 正式发布，支持 .NET Core 和 .NET 5+ 的 WCF &#8211; 冠军 _在线工具</a></li>
                        <li class="py-2"><a href="/html/category/article-4063.htm" title="Python生成sql语句">Python生成sql语句</a></li>
                        <li class="py-2"><a href="/html/category/article-4034.htm" title="vscode离线在线安装扩展工具">vscode离线在线安装扩展工具</a></li>
                        <li class="py-2"><a href="/html/category/article-4016.htm" title="一文看懂哈希表并学会使用C++ STL 中的哈希表">一文看懂哈希表并学会使用C++ STL 中的哈希表</a></li>
                        <li class="py-2"><a href="/html/category/article-4024.htm" title="网络协议之:socket协议详解之Unix domain Socket">网络协议之:socket协议详解之Unix domain Socket</a></li>
                        <li class="py-2"><a href="/html/category/article-4022.htm" title="java socket read 堵塞问题的解决方法">java socket read 堵塞问题的解决方法</a></li>
                        <li class="py-2"><a href="/html/category/article-4046.htm" title="Vue  el-input  trim() 去空格">Vue  el-input  trim() 去空格</a></li>
                        <li class="py-2"><a href="/html/category/article-4061.htm" title="如何在Android sqlite中删除表？">如何在Android sqlite中删除表？</a></li>
                        <li class="py-2"><a href="/html/category/article-4015.htm" title="MySQL 回表">MySQL 回表</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">4</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



               </div>
            </div>
        </div>
    </div>
    <!-- about sectuion end -->
        <!-- copyright section start -->
    <div class="copyright_section">
        <div class="container">
            <div class="row">
                <div class="col-sm-12">
                    <p class="copyright_text">
                        Lebanon Address 版权所有
                        <br />
                        Powered by WordPress
                    </p>
                </div>
            </div>
        </div>
    </div>
    <!-- copyright section end -->
    <!-- Javascript files-->
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/jquery.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/popper.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/bootstrap.bundle.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/jquery-3.0.0.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/plugin.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>
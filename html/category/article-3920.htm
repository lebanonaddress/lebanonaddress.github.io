<!DOCTYPE html>
<html lang="zh-CN">

<head>
       <link rel="canonical" href="https://lebanonaddress.github.io/html/category/article-3920.htm" />
    <!-- basic -->
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- mobile metas -->
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="viewport" content="initial-scale=1, maximum-scale=1">
    <link rel="icon" href="/assets/addons/xcblog/img/lebanonaddress/favicon.ico" type="image/x-icon"/>
    <!-- site metas -->
    <title>四个实例超详细讲解Java 贪心和枚举的特点与使用_java - Lebanon Address</title>
        <!-- bootstrap css -->
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/lebanonaddress/bootstrap.min.css">
    <!-- style css -->
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/lebanonaddress/style.css">
    <!-- Responsive-->
    <link rel="stylesheet" href="/assets/addons/xcblog/css/lebanonaddress/responsive.css">
    <!-- Scrollbar Custom CSS -->
    <link rel="stylesheet" href="/assets/addons/xcblog/css/lebanonaddress/jquery.mCustomScrollbar.min.css">
    <!-- Tweaks for older IEs-->
    <link rel="stylesheet" href="https://cdn.bootcdn.net/ajax/libs/font-awesome/4.0.3/css/font-awesome.css">
    <!-- fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600;700&display=swap" rel="stylesheet">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?f480db041fa3a9ffc78a7d6776ae8726";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
       <!-- header section start -->
    <div class="header_section">
        <div class="container">
            <nav class="navbar navbar-expand-lg navbar-light bg-light">
                <div class="logo">
                                        <a href="/">Lebanon Address</a>
                                    </div>
                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarSupportedContent">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
            </nav>
        </div>
    </div>
    <!-- header section end -->
      <!-- services section start -->
      <div class="services_section layout_padding">
         <div class="container">
            <div class="row">
               <div class="col-sm-12">
                  <h1 class="services_taital"><span class="about_icon">四个实例超详细讲解Java 贪心和枚举的特点与使用_java </h1>
                    <p class="nav-box text-center">
                        <a href="/">首页</a> / <a href="/html/category/">文章分类</span>
                    </p>
               </div>
            </div>
         </div>
      </div>
      <!-- services section end -->
    <!-- about sectuion start -->
    <div class="about_section layout_padding">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                      				  				  				<div id="navCategory"> <h5 class="catalogue">目录</h5> <ul class="first_class_ul"> <li>贪心：</li> <li>枚举：</li> <ul class="second_class_ul"> <li>1.朴素枚举</li> <li>2.状压枚举   </li> </ul> <li>算法题1：</li> <ul class="second_class_ul"> <li>示例</li> </ul> <li>算法题2：</li> <ul class="second_class_ul"> <li>示例</li> </ul> <li>算法题3： </li> <ul class="second_class_ul"> <li>示例1</li> <li>示例2</li> </ul> <li>算法题4： </li> <ul class="second_class_ul"> <li>示例</li> </ul> </ul> </div> <p>笔试技巧：学会根据数据范围猜知识点         </p> <p>一般1s 时间限制的题目，时间复杂度能跑到 1e8 左右（ python 和 java 会少一些，所以建议大家使用c/c++ 做笔试题）。</p> <div class="table-box"> <table> <tbody> <tr> <td> <div style="text-align:center">n 范围 20 以内：</div> </td> <td> <div style="text-align:center">O(n*2^n)</div> </td> <td> <div style="text-align:center">状压搜索 /dfs 暴搜</div> </td> </tr> <tr> <td> <div style="text-align:center">n 范围 200 以内：</div> </td> <td> <div style="text-align:center">O(n^3)</div> </td> <td> <div style="text-align:center">三维 dp</div> </td> </tr> <tr> <td> <div style="text-align:center">n 范围 3000 以内：</div> </td> <td> <div style="text-align:center">O(n^2)</div> </td> <td> <div style="text-align:center">二维 dp 背包 枚举 二维前缀和等</div> </td> </tr> <tr> <td> <div style="text-align:center">n 范围 1e5 以内：</div> </td> <td> <div style="text-align:center">O(n√n)</div> </td> <td> <div style="text-align:center">暴力求因子等</div> </td> </tr> <tr> <td> <div style="text-align:center">n 范围 1e6 以内：</div> </td> <td> <div style="text-align:center">O(nlogn)</div> </td> <td> <div style="text-align:center">二分答案 使用各种 stl 并查集 欧拉筛等</div> </td> </tr> <tr> <td> <div style="text-align:center">n 范围 1e7 以内：</div> </td> <td> <div style="text-align:center">O(n)</div> </td> <td> <div style="text-align:center">双指针 线性 dp 差 分 / 前缀和</div> </td> </tr> <tr> <td> <div style="text-align:center">n 范围 1e14 以内：</div> </td> <td> <div style="text-align:center">O(√n)</div> </td> <td> <div style="text-align:center">求约数和 约数个数</div> </td> </tr> </tbody> </table> </div> <p class="maodian"></p> <h2>贪心：</h2> <p>贪心指每一步都做出当前最优的选择。一般解决的问题有如下特点：局部最优能导致全局最优。</p> <p>请注意，贪心并不是万能的！</p> <p>有n个物品。每个物品有价值v[i]，以及重量w[i]。</p> <p>现在取总重量不超过m的物品，问取的物品价值最大是多少？（背包问题）</p> <ul> <li>策略1：按照价值降序排列，每次取价值最高的。</li> <li>策略2 ：按照重量升序排列，每次取重量最轻的。</li> <li>策略3 ：按照价值/重量（即单位价值）降序排列，每次取单位价值最高的。</li> </ul> <p class="maodian"></p> <h2>枚举：</h2> <p class="maodian"></p> <h3>1.朴素枚举</h3> <p>顾名思义，用for循环枚举所有情况。</p> <p class="maodian"></p> <h3>2.状压枚举   </h3> <p>借助n进制的性质进行枚举。</p> <p>适合场景：共有n个物品，每个物品有m种状态，枚举所有物品的所有状态，复杂度为O(m^n)。</p> <p>二进制状压枚举的写法：</p> <p>典型场景： 总共有n个数：a1、a2……an，每个数可以取也可以不取，枚举所有方案。      </p> <div class="ay1code"> <pre class="brush:java;">  for(int i=0;i<1<<n;i++){  //i为1到2^n的状态压缩值   2^n  	int p=i;          //先将i取出  	int sum=0;        //用一个变量维护取出的数之和  	for(j=0;j<n;j++){   //转为二进制进行操作  		sum+=p%2*a[j];    //这句话是求取出来的数之和。p%2为对应二进制位                    		 //这里也可以进行其他操作，不一一举例。  		p/=2;            //求下一个二进制位       	}       //这里可以添加想要的操作。     }</pre> </div> <p class="maodian"></p> <h2>算法题1：</h2> <p>chika和蜜柑（PriorityQueue+Comparator的使用）</p> <p>难度 ⭐⭐</p> <p>chika很喜欢吃蜜柑。每个蜜柑有一定的酸度和甜度，chika喜欢吃甜的，但不喜欢吃酸的。</p> <p>一共有n个蜜柑，chika吃k个蜜柑，将获得所吃的甜度之和与酸度之和。chika想获得尽可能大的甜度总和。如果有多种方案，她希望总酸度尽可能小。</p> <p>她想知道，最终的总酸度和总甜度是多少？</p> <p>题目信息：先按甜度降序排序，后按酸度升序排序（保持之前的甜度降序排序优先，酸度升序排序次之） </p> <p>输入描述:</p> <p>第一行有两个正整数n和k，分别代表蜜柑总数和chika吃的蜜柑数量。(1≤k≤n≤200000)</p> <p>第二行有n个正整数ai，分别代表每个蜜柑的酸度。（1≤ai≤1e9）</p> <p>第二行有n个正整数bi，分别代表每个蜜柑的甜度。（1≤bi≤1e9）</p> <p>输出描述:</p> <p>两个正整数，用空格隔开。分别表示总酸度和总甜度。</p> <p class="maodian"></p> <p class="maodian"></p> <p class="maodian"></p> <h3>示例</h3> <p>输入</p> <blockquote> <p>3 2</p> <p>1 3 4</p> <p>2 2 5</p> </blockquote> <p>输出</p> <blockquote> <p>5 7</p> </blockquote> <p>说明</p> <p>选择1号和3号蜜柑，总酸度为5，总甜度为7，为最优解。</p> <div class="ay1code"> <pre class="brush:java;">  import java.io.*;  import java.util.*;  public class Main{      public static class Orange{              int acid;              int sweet;              public Orange(int acid, int sweet){                  this.acid = acid;                  this.sweet = sweet;              }              public Orange(){}          }      public static void main(String[] args) throws IOException{          BufferedReader br = new BufferedReader(new InputStreamReader(System.in));          String[] tmp = br.readLine().split(" ");          int n = Integer.parseInt(tmp[0]);          int k = Integer.parseInt((tmp[1]));          String[] ai = br.readLine().split(" ");          String[] bi = br.readLine().split(" ");          //定义一个优先队列，并根据指定的比较器对其元素进行排序。          PriorityQueue<Orange> queue = new PriorityQueue<>((Orange o1, Orange o2)->{              //匿名内部类以lambda的形式定义排序规则              if(o1.sweet == o2.sweet){                  return o1.acid - o2.acid;              }else{                  return o2.sweet - o1.sweet;              }          });          for(int i = 0; i < n; i++){              Orange orange = new Orange();              orange.acid = Integer.parseInt(ai[i]);              orange.sweet = Integer.parseInt(bi[i]);              queue.add(orange);          }          long totalAcid = 0;          long totalSweet = 0;          for(int i = 0; i < k; i++){              Orange o = queue.poll();              totalAcid += o.acid;              totalSweet += o.sweet;          }          System.out.println(totalAcid + " " + totalSweet);      }  }</pre> </div> <p>目的：</p> <p>了解什么是贪心，当设计到优先级时可以考虑使用PriorityQueue+Comparator。</p> <p class="maodian"></p> <h2>算法题2：</h2> <p>you和帆船 </p> <p>难度 ⭐⭐</p> <p>you的父亲是一名船长。因此you从小就很喜欢大海。这天，她乘着一艘帆船出发了。</p> <p>大海上有很多宝藏，每个宝藏的坐标是已知的。you的初始坐标是（0,0）。她想探索两个宝藏，然后回到初始点。</p> <p>you希望航线尽可能短。她想知道，最短航线的长度是多少？</p> <p>题目信息：两个for循环枚举一下，再保存最短路径即可。</p> <p>输入描述:</p> <p>第一行一个正整数n，代表宝藏的数量。（2≤n≤2000）</p> <p>接下来的n行，每行2个正整数xi，yi，代表第i个宝藏的坐标（-3000≤xi,yi≤3000）</p> <p>不保证不存在两个宝藏位置相同。意思是，you可以在同一个位置探索这两个宝藏。</p> <p>输出描述:</p> <p>最短路线的长度。小数点后保留6位。</p> <h3>示例</h3> <p>输入</p> <blockquote> <p>2</p> <p>1 0</p> <p>0 1</p> </blockquote> <p>输出</p> <blockquote> <p>3.414214</p> </blockquote> <p>说明</p> <p style="text-align:center"><img decoding="async" alt="" height="45" src="http://img.555519.xyz/uploads3/20220420/71e51e0e82226efe2d10a222d1663903.jpg"></p> <div class="ay1code"> <pre class="brush:java;">  import java.io.*;  import java.util.*;     class Point{      double x;      double y;  }     public class Main{      public static void main(String[] args) throws IOException{          BufferedReader br = new BufferedReader(new InputStreamReader(System.in));          int n = Integer.parseInt(br.readLine());          Point[] points = new Point[n];          for(int i=0;i<n;i++){              String[] strings = br.readLine().split(" ");              Point point = new Point();              point.x = Integer.parseInt(strings[0]);              point.y = Integer.parseInt(strings[1]);              points[i] = point;          }          double min = Double.MAX_VALUE;//定义最大值，寻找较小值          //双层遍历枚举          for (int i=0;i<n-1;i++) {              for (int j=i+1;j<n;j++) {                  double temp = Math.sqrt(points[i].x*points[i].x + points[i].y*points[i].y)                           + Math.sqrt(points[j].x*points[j].x + points[j].y*points[j].y)                           + Math.sqrt((points[i].x-points[j].x)*(points[i].x-points[j].x) + (points[i].y-points[j].y)*(points[i].y-points[j].y));                  min = Math.min(min, temp);              }          }          System.out.println(String.format("%.6f", min));      }  }</pre> </div> <p>目的：</p> <p>了解什么是枚举，虽然是一个一个列举，但是结合实际还是有优化的方式。</p> <p>比如此题两层循环只枚举了一半的情况：因为所求的是距离，跟两个端点无关。</p> <p>思考：</p> <p>假如不止有两个宝箱需要被获取，那么应该怎么办？？？下一题可以参考一下。</p> <p class="maodian"></p> <h2>算法题3： </h2> <p>数位染色   </p> <p>难度 ⭐⭐⭐</p> <p>小红拿到了一个正整数 X 。她可以将其中一些数位染成红色。然后她想让所有染红的数位数字之和等于没染色的数位数字之和。</p> <p>她不知道能不能达成目标。你能告诉她吗？</p> <p>输入描述:</p> <p>一个正整数X ，1<= X <=10^18</p> <p>输出描述:</p> <p>如果小红能按要求完成染色，输出"Yes"。否则输出"No"。</p> <p class="maodian"></p> <h3>示例1</h3> <p>输入</p> <blockquote> <p>1234567</p> </blockquote> <p>输出</p> <blockquote> <p>Yes</p> </blockquote> <p>说明</p> <p>将3、4、7染成红色即可，这样3+4+7=1+2+5+6</p> <p class="maodian"></p> <h3>示例2</h3> <p>输入</p> <blockquote> <p>23</p> </blockquote> <p>输出</p> <blockquote> <p>No</p> </blockquote> <p>说明</p> <p>显然无论如何都不能完成染色。</p> <div class="ay1code"> <pre class="brush:java;">  import java.util.*;  import java.io.*;  public class Main{      public static void main(String[] args)throws IOException{          BufferedReader br = new BufferedReader(new InputStreamReader(System.in));          Long x= Long.parseLong(br.readLine());          //循环0到2^18来展现所有的可能性          for(int i=0;i<1<<19;i++){              long p=i,s1=0,s2=0,temp=x;                 //将p拟化为2进制，通过j来寻尾。寻一次p就对应的二进制数就少一位。              for(int j=0;j<19;j++){                  if(p%2==1)s1+=temp%10;                  else s2+=temp%10;                  p/=2;                  temp/=10;              }              if(s1==s2){                  System.out.println("Yes");                  System.exit(0);              }          }          System.out.println("No");      }  }</pre> </div> <p>这题使用的是状压枚举</p> <p>只有两种状态就拟成2进制，假如有3种状态就拟成3进制（上面的代码会有些许改变，n种状态也一样）</p> <div class="ay1code"> <pre class="brush:java;">   for(int i=0;i<1<<19;i++)    //修改成   for(int i=0;i<19;i++) p1[i]=p1[i-1]*3;   for(int i=0;i<p1[i];i++){}</pre> </div> <p>当然这题也可以使用背包或dfs来解答。</p> <p class="maodian"></p> <h2>算法题4： </h2> <p>ranko的手表  </p> <p>难度 ⭐⭐⭐⭐</p> <p>ranko 的手表坏了，正常应该显示 xx:xx 的形式（4 个数字），比如下午 1 点半应该显示 13:30 ，但现在经常会有一些数字有概率无法显示。</p> <p>ranko 在 t1 时刻看了下时间，过了一段时间在 t2 时刻看了下时间。她想知道， t1  和t2这两个时刻之间相距的时间的最大值和最小值是多少？</p> <p>保证t1在t2之前（且t1和t2不等）。 t1和t2在同一天的 00:00 到 23:59 之间。 </p> <p>输入描述:</p> <p>两行输入两个时间，为 xx:xx 的形式。其中 x 为数字或者字符 '?' ，问号代表这个数字没有显示。保证输入是合法的。</p> <p>输出描述:</p> <p>一行输出两个整数，分别代表 t1 和 t2 相距时间的最小值和最大值（单位分钟）。</p> <h3>示例</h3> <p>输入</p> <blockquote> <p>18:0?</p> <p>2?:1?</p> </blockquote> <p>输出</p> <blockquote> <p>121 319</p> </blockquote> <p>说明</p> <p>相距最小的时间为 18:09 到 20:10 ，相距121分钟。</p> <p>相距最大的时间为 18:00 到 23:19 ，相距319分钟。</p> <div class="ay1code"> <pre class="brush:java;">  import java.util.*;  import java.io.*;  public class Main{      public static void main(String[] args) throws IOException{          BufferedReader br = new BufferedReader(new InputStreamReader(System.in));          String s1 = br.readLine();          String s2 = br.readLine();          ArrayList<Integer> a1 = new ArrayList<>();          ArrayList<Integer> a2 = new ArrayList<>();          for(int i = 0; i < 60*24; i++){              int hour = i/60, minute = i%60;              if((hour/10 == s1.charAt(0)-'0' || s1.charAt(0) == '?') &&                 (hour%10 == s1.charAt(1)-'0' || s1.charAt(1) == '?') &&                 (minute/10 == s1.charAt(3)-'0' || s1.charAt(3) == '?') &&                 (minute%10 == s1.charAt(4)-'0' || s1.charAt(4) == '?')) a1.add(i);              if((hour/10 == s2.charAt(0)-'0' || s2.charAt(0) == '?') &&                 (hour%10 == s2.charAt(1)-'0' || s2.charAt(1) == '?') &&                 (minute/10 == s2.charAt(3)-'0' || s2.charAt(3) == '?') &&                 (minute%10 == s2.charAt(4)-'0' || s2.charAt(4) == '?'))a2.add(i);          }          int min= Integer.MAX_VALUE, max = Integer.MIN_VALUE;          for(int i = 0; i<a1.size();i++){              for(int j = 0; j<a2.size();j++){                  if(a1.get(i)<a2.get(j)){                      min = Math.min(min,a2.get(j)-a1.get(i));                      max = Math.max(max,a2.get(j)-a1.get(i));                  }              }          }          System.out.print(min + " " + max);      }  }</pre> </div> <p>假如此题不使用枚举，则会限定很多条件。还不如直接都列举出来</p> 			
                    <div class="col-md-12 mt-5">
                                                <p>上一个：<a href="/html/category/article-3919.htm">Spring Boot启动故障分析神器</a></p>
                                                <p>下一个：<a href="/html/category/article-3921.htm">Mysql中的Date,DateTime,TimeStamp和Time类型</a></p>
                                            </div>

                                    </div>
                <div class="col-md-3">
                  <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-6594.htm" title="动物医疗器械市场（动物医疗设备）">动物医疗器械市场（动物医疗设备）</a></li>
                        <li class="py-2"><a href="/html/category/article-7238.htm" title="宠物免费领养网站大全（免费领养宠物包邮）">宠物免费领养网站大全（免费领养宠物包邮）</a></li>
                        <li class="py-2"><a href="/html/category/article-7147.htm" title="play是什么牌子的衣服贵吗(play是什么牌子的衣服价格)">play是什么牌子的衣服贵吗(play是什么牌子的衣服价格)</a></li>
                        <li class="py-2"><a href="/html/category/article-7515.htm" title="动物医院诊疗范围有哪些类型 动物医院诊疗范围有哪些类型的">动物医院诊疗范围有哪些类型 动物医院诊疗范围有哪些类型的</a></li>
                        <li class="py-2"><a href="/html/category/article-7468.htm" title="动物疫苗价格表图片及价格大全图（动物疫苗多少钱一支）">动物疫苗价格表图片及价格大全图（动物疫苗多少钱一支）</a></li>
                        <li class="py-2"><a href="/html/category/article-6219.htm" title="动物疫苗预防控制中心（动物疫病预防中心）">动物疫苗预防控制中心（动物疫病预防中心）</a></li>
                        <li class="py-2"><a href="/html/category/article-6732.htm" title="动物医院简笔画（动物医院海报）">动物医院简笔画（动物医院海报）</a></li>
                        <li class="py-2"><a href="/html/category/article-6641.htm" title="宠物粮食加工厂设备模具会粘吗 宠物粮食加工设备贵吗">宠物粮食加工厂设备模具会粘吗 宠物粮食加工设备贵吗</a></li>
                        <li class="py-2"><a href="/html/category/article-7377.htm" title="金庸对各个版本神雕侠侣的评价（神雕侠侣剧情介绍）这样也行？，">金庸对各个版本神雕侠侣的评价（神雕侠侣剧情介绍）这样也行？，</a></li>
                        <li class="py-2"><a href="/html/category/article-7008.htm" title="青岛最好的动物医院在哪里（青岛最好的动物医院在哪里啊）">青岛最好的动物医院在哪里（青岛最好的动物医院在哪里啊）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">20</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



               </div>
            </div>
        </div>
    </div>
    <!-- about sectuion end -->
        <!-- copyright section start -->
    <div class="copyright_section">
        <div class="container">
            <div class="row">
                <div class="col-sm-12">
                    <p class="copyright_text">
                        Lebanon Address 版权所有
                        <br />
                        Powered by WordPress
                    </p>
                </div>
            </div>
        </div>
    </div>
    <!-- copyright section end -->
    <!-- Javascript files-->
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/jquery.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/popper.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/bootstrap.bundle.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/jquery-3.0.0.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/plugin.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>
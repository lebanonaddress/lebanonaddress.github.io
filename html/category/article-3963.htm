<!DOCTYPE html>
<html lang="zh-CN">

<head>
       <link rel="canonical" href="https://lebanonaddress.github.io/html/category/article-3963.htm" />
    <!-- basic -->
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- mobile metas -->
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="viewport" content="initial-scale=1, maximum-scale=1">
    <link rel="icon" href="/assets/addons/xcblog/img/lebanonaddress/favicon.ico" type="image/x-icon"/>
    <!-- site metas -->
    <title>C++ String类的简单实现 - Lebanon Address</title>
        <!-- bootstrap css -->
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/lebanonaddress/bootstrap.min.css">
    <!-- style css -->
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/lebanonaddress/style.css">
    <!-- Responsive-->
    <link rel="stylesheet" href="/assets/addons/xcblog/css/lebanonaddress/responsive.css">
    <!-- Scrollbar Custom CSS -->
    <link rel="stylesheet" href="/assets/addons/xcblog/css/lebanonaddress/jquery.mCustomScrollbar.min.css">
    <!-- Tweaks for older IEs-->
    <link rel="stylesheet" href="https://cdn.bootcdn.net/ajax/libs/font-awesome/4.0.3/css/font-awesome.css">
    <!-- fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600;700&display=swap" rel="stylesheet">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?f480db041fa3a9ffc78a7d6776ae8726";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
       <!-- header section start -->
    <div class="header_section">
        <div class="container">
            <nav class="navbar navbar-expand-lg navbar-light bg-light">
                <div class="logo">
                                        <a href="/">Lebanon Address</a>
                                    </div>
                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarSupportedContent">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
            </nav>
        </div>
    </div>
    <!-- header section end -->
      <!-- services section start -->
      <div class="services_section layout_padding">
         <div class="container">
            <div class="row">
               <div class="col-sm-12">
                  <h1 class="services_taital"><span class="about_icon">C++ String类的简单实现 </h1>
                    <p class="nav-box text-center">
                        <a href="/">首页</a> / <a href="/html/category/">文章分类</span>
                    </p>
               </div>
            </div>
         </div>
      </div>
      <!-- services section end -->
    <!-- about sectuion start -->
    <div class="about_section layout_padding">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                      				  				  				<div id="content_views" class="htmledit_views"> <p><strong>在之前c语言的学习中，对于字符串我们很难像整型和其他变量那样进行比较和直接的复制或者定义去运用。但在C++中为了解决这个问题提供了一种类，String类，以类型的形式对字符串进行封装，它除了作为储存字符的容器外，可以对字序列的一系列操作。</strong></p> <p><strong>下面我们对String类进行简单的模拟实现：</strong></p> <pre><code>namespace wjx { 	class string 	{ 	public: 	private: 		char* _str; 	};</code></pre> <p>首先，我们定义一个自己的命名空间，来实现我们的string类，定义初始数据char*类型的_str来作为string类中的数据。</p> <pre><code>string(const char* str) 			:_str(new char[strlen(str) + 1]) 		{ 			strcpy(_str, str); 		}</code></pre> <p>我们先来实现String类中的构造函数，首先计算出所加字符串的长度，为原有数据_str开辟空间，此处+1是为了放置'\0'方便操作，开辟空间后将str通过strcpy函数复制给_str，完成构造。</p> <pre><code>string(const string&amp; s) 			:_str(new char[strlen(s._str)+1]) 		{ 			strcpy(_str, s._str); 		} ~string() 		{ 			delete[] _str; 			_str = nullptr; 		}</code></pre> <p>上述为实现string类的拷贝构造函数(深拷贝)和析构函数，一个类中如果没有定义拷贝构造函数，就会调用默认的拷贝构造函数。而拷贝构造分为深浅拷贝，下图为<span style="color:#fe2c24;">深浅拷贝</span>的底层实现：</p> <p>&nbsp;<img fetchpriority="high" decoding="async" alt="" height="409" src="http://img.555519.xyz/uploads/20230108/5861e568176d0a7e00e1e4fd86389e5b.jpg"></p> <p>&nbsp;在我们没有定义拷贝构造函数时，系统会调用默认的拷贝构造函数，string s1("hello world"),string s2(s1),如上图所示系统默认的拷贝构造函数为普通的传值拷贝，所以s1与s2指向同一块空间，但当出作用域时，调用析构函数，s1指向的空间被释放，s2则指向空，所以程序会崩溃。</p> <p style="text-align:center;"><img decoding="async" alt="" height="230" src="http://img.555519.xyz/uploads/20230108/25473469b8e98fcabed07ac3e7a994ba.jpg"></p> <p>&nbsp;但当我们使用深拷贝时，则不会出现那样的情况，因为我们在定义深拷贝函数时，会首先开辟一个与要拷贝字符串等长的空间，再将其复制过去，所以s1与s2指向的位置是不同的，析构函数释放时是互不影响的，所以这就是深浅拷贝的区别。</p> <p>下面为赋值运算符重载的方法：</p> <pre><code>string&amp; operator=(const string&amp; s) 		{ 			if (this != &amp;s) 			{ 				char* tmp = new char[strlen(s._str) + 1]; 				strcpy(tmp, s._str); 				delete[] _str; 				_str = tmp; 			} 			return *this; 		}</code></pre> <p>上述代码为赋值运算符重载，当我们调用赋值运算符重载时，需要先开辟一个空间用来复制需要拷贝的字符串，再通过释放原来的空间并用成员变量指向新的空间，从而达到赋值。注意的是if (this != &amp;s)是需要区别s1=s1时的情况的，不能自己给自己赋值。</p> <p><strong>下面为拷贝构造函数和赋值运算符函数的现代写法：</strong></p> <pre><code>string(const string&amp; s)//拷贝构造函数现代写法 			:_str(nullptr) 		{ 			string tmp(s._str); 			swap(_str, tmp._str); 		}  string&amp; operator=(const string&amp; s)//赋值运算符重载的现代写法 		{ 			 if (this != &amp;s) 			 { 				 string tmp(s); 				 swap(_str, tmp._str); 			 } 			 return *this; 		}</code></pre> <p>现代写法对于之前的传统写法来说，对于拷贝构造函数，传统方法需要申请新空间，但现代版本不需要，直接创造一个对象，因为对象被创建后，数据的底层空间已经被开辟出来了，直接可以通过交换来实现拷贝构造；而对于赋值运算符重载来说传统版本需要申请和释放空间，而新版本利用创建对象和交换函数来直接实现。</p> </p></div> 			
                    <div class="col-md-12 mt-5">
                                                <p>上一个：<a href="/html/category/article-3962.htm">hibernate框架使用详解一</a></p>
                                                <p>下一个：<a href="/html/category/article-3964.htm">分析fastcache和freecache(一)_在线工具</a></p>
                                            </div>

                                    </div>
                <div class="col-md-3">
                  <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-8020.htm" title="动物医院需要几个兽医资格证才能进行体检（动物医院要求）">动物医院需要几个兽医资格证才能进行体检（动物医院要求）</a></li>
                        <li class="py-2"><a href="/html/category/article-8158.htm" title="猫看见不干净东西举动 猫咪认主的5大征兆">猫看见不干净东西举动 猫咪认主的5大征兆</a></li>
                        <li class="py-2"><a href="/html/category/article-7652.htm" title="国内动物医院排行（中国最好的动物医学院）">国内动物医院排行（中国最好的动物医学院）</a></li>
                        <li class="py-2"><a href="/html/category/article-7790.htm" title="宠物店粮食一个月要多少斤正常 宠物店粮食一个月要多少斤正常呢">宠物店粮食一个月要多少斤正常 宠物店粮食一个月要多少斤正常呢</a></li>
                        <li class="py-2"><a href="/html/category/article-7515.htm" title="动物医院诊疗范围有哪些类型 动物医院诊疗范围有哪些类型的">动物医院诊疗范围有哪些类型 动物医院诊疗范围有哪些类型的</a></li>
                        <li class="py-2"><a href="/html/category/article-8250.htm" title="安康旅游景点排行榜一日游(安康十大旅游景点哪里好玩)">安康旅游景点排行榜一日游(安康十大旅游景点哪里好玩)</a></li>
                        <li class="py-2"><a href="/html/category/article-7699.htm" title="同安宠物医院（同安宠物医院电话号码）">同安宠物医院（同安宠物医院电话号码）</a></li>
                        <li class="py-2"><a href="/html/category/article-7745.htm" title="合肥宠物领养中心在哪里有 合肥宠物领养中心在哪里有啊">合肥宠物领养中心在哪里有 合肥宠物领养中心在哪里有啊</a></li>
                        <li class="py-2"><a href="/html/category/article-7469.htm" title="烧茶壶哪个品牌好一点(烧水壶十大公认品牌)">烧茶壶哪个品牌好一点(烧水壶十大公认品牌)</a></li>
                        <li class="py-2"><a href="/html/category/article-7147.htm" title="play是什么牌子的衣服贵吗(play是什么牌子的衣服价格)">play是什么牌子的衣服贵吗(play是什么牌子的衣服价格)</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">52</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



               </div>
            </div>
        </div>
    </div>
    <!-- about sectuion end -->
        <!-- copyright section start -->
    <div class="copyright_section">
        <div class="container">
            <div class="row">
                <div class="col-sm-12">
                    <p class="copyright_text">
                        Lebanon Address 版权所有
                        <br />
                        Powered by WordPress
                    </p>
                </div>
            </div>
        </div>
    </div>
    <!-- copyright section end -->
    <!-- Javascript files-->
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/jquery.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/popper.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/bootstrap.bundle.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/jquery-3.0.0.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/plugin.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>
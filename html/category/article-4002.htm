<!DOCTYPE html>
<html lang="zh-CN">

<head>
       <link rel="canonical" href="https://lebanonaddress.github.io/html/category/article-4002.htm" />
    <!-- basic -->
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- mobile metas -->
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="viewport" content="initial-scale=1, maximum-scale=1">
    <link rel="icon" href="/assets/addons/xcblog/img/lebanonaddress/favicon.ico" type="image/x-icon"/>
    <!-- site metas -->
    <title>java初始时间_java日期时间详解 - Lebanon Address</title>
        <!-- bootstrap css -->
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/lebanonaddress/bootstrap.min.css">
    <!-- style css -->
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/lebanonaddress/style.css">
    <!-- Responsive-->
    <link rel="stylesheet" href="/assets/addons/xcblog/css/lebanonaddress/responsive.css">
    <!-- Scrollbar Custom CSS -->
    <link rel="stylesheet" href="/assets/addons/xcblog/css/lebanonaddress/jquery.mCustomScrollbar.min.css">
    <!-- Tweaks for older IEs-->
    <link rel="stylesheet" href="https://cdn.bootcdn.net/ajax/libs/font-awesome/4.0.3/css/font-awesome.css">
    <!-- fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600;700&display=swap" rel="stylesheet">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?f480db041fa3a9ffc78a7d6776ae8726";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
       <!-- header section start -->
    <div class="header_section">
        <div class="container">
            <nav class="navbar navbar-expand-lg navbar-light bg-light">
                <div class="logo">
                                        <a href="/">Lebanon Address</a>
                                    </div>
                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarSupportedContent">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
            </nav>
        </div>
    </div>
    <!-- header section end -->
      <!-- services section start -->
      <div class="services_section layout_padding">
         <div class="container">
            <div class="row">
               <div class="col-sm-12">
                  <h1 class="services_taital"><span class="about_icon">java初始时间_java日期时间详解 </h1>
                    <p class="nav-box text-center">
                        <a href="/">首页</a> / <a href="/html/category/">文章分类</span>
                    </p>
               </div>
            </div>
         </div>
      </div>
      <!-- services section end -->
    <!-- about sectuion start -->
    <div class="about_section layout_padding">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                      				  				  				<div id="content_views" class="htmledit_views"> <div style="font-size:16px;"> <p>java.util包提供了Date类来封装当前的日期和时间，Date类提供两个构造函数来实例化Date对象.第一个构造函数使用当前日期和时间来初始化对象.</p> <p>Date(),第二个构造函数接收一个参数，该参数是从1970年1月1日起的毫秒数,</p> <p>Date(long milliser)</p> <p>Date对象创建以后，可以调用下面的方法，</p> <p>boolean after(Date date)</p> <p>若当调用此方法的Date对象在指定日期之后返回true,否则返回false.</p> <p>boolean before(Date date)</p> <p>若当调用此方法的Date对象在指定日期之前返回true,否则返回false.</p> <p>Object clone(),返回此对象的副本,</p> <p>int compareTo(Date date)</p> <p>比较当调用此方法的Date对象和指定日期，两者相等时候返回0,调用对象在指定日期之前</p> <p>则返回负数，调用对象在指定日期之后则返回正数.</p> <p>int compareTo(Object obj)</p> <p>若obj是Date类型则操作等同于compareTo(Date),否则它抛出ClassCastException.</p> <p>boolean equals(Object date)</p> <p>当调用此方法的Date对象和指定日期相等时候返回true,否则返回false.</p> <p>long getTime(),返回自1970年1月1日00:00:00 GMT以来此Date对象表示的毫秒数,</p> <p>int hashCode(),</p> <p>返回此对象的哈希码值,</p> <p>void setTime(long time)</p> <p>用自1970年1月1日00:00:00 GMT以后time毫秒数设置时候和日期,</p> <p>String toString(),</p> <p>把此Date对象转换为以下形式的String:dow mon dd hh:mm:ss zzz yyyy其中:dow是一周中的某一天</p> <p>(Sun,Mon,Tue,Web,Thu,Fri,Sat)</p> <p>获取当前日期时候,</p> <p>java中获取当前日期和时间很简单，使用Date对象的toString()方法来打印当前日期和时候，</p> <pre><code class="Bash"><xmp>public class DateDemo{ public static void main(String args[]){ //初始化Date对象  Date date=new Date();  //使用toString() 函数显示日期时间  System.out.println(date.toString());  }  }</xmp></code></pre> <p>日期比较,</p> <pre><code class="Bash"><xmp>java使用以下三种方法来比较两个日期:  使用getTime()方法获取两个日期(自1970年1月1日经历的毫秒数值),然后比较这两个值.  使用方法before(),after()和equals(),例如，  使用compareTo()方法，它是由Comparable接口定义的，Date类实现了这个接口。  使用simpleDateFormat格式化日期，  SimpleDateFormat是一个以语言环境敏感的方式格式化和分析日期的类，  SimpleDateFormat允许你选择任何用户自定义日期时间格式化运行,  import java.util.*;  import java.text.*;  public class DateDemo{ public static void main(String args[]){ Date dNow=new Date();  SimpleDateFormat ft=new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");  System.out.println("时间:"+ft.format(dNow));  }  }</xmp></code></pre> <p>日期和时间的格式化编码,</p> <p>G,纪元标记AD,</p> <p>y,四位年份，2001,</p> <p>M,月份，July or 07,</p> <p>d,一个月的日期,10,</p> <p>h,A.M/P.M(1-12)格式小时12</p> <p>H,一天中的小时(0-23),22</p> <p>m,分钟数,30,</p> <p>s,秒数，55</p> <p>S,毫秒数，234，</p> <p>E,星期几,Tuesday.</p> <p>D,一年中的日子，360,</p> <p>F,一个月中第几周的周几，2(second Web in July)</p> <p>w,一年中第几周，40，</p> <p>W,一月中第几周，1</p> <p>a,A.M/P.M标记，PM</p> <p>k,一天中的小时(1--24) 24,</p> <p>K,AM/PM(0-11)格式小时，10</p> <p>z,时区,</p> <p>',文字定界符，"，单引号.</p> <p>使用printf格式化日期:</p> <p>printf方法可以很轻松地格式化时间和日期，使用两个字母格式，</p> <p>它以%t开头并且以下面表格中的一个字母结尾,</p> <p>c,包括全部日期和时间信息，F,"年-月-日"格式,</p> <p>D,"月/日/年"格式,r,"HH:MM:SS PM"格式(12时制)</p> <p>T,"HH:MM:SS"格式(24时制),R,"HH:MM"格式(24时制)</p> <p>解析字符串为时间，</p> <p>SimpleDateFormat类有一些附加的方法，特别是parse(),它试图按照给定的</p> <p>SimpleDateFormat对象的格式化存储来解析字符串,</p> <p>java休眠(sleep)</p> <p>sleep()使当前线程进入停滞状态(阻塞当前线程),让出cpu的使用，</p> <p>目的是不让当前线程独自霸占该进程所获的cpu资源，以留一定时间给他线程执行的机会 ，</p> <pre><code class="Bash"><xmp>import java.util.*;  public class SleepDemo{ public static void main(String args[]){ try{ System.out.println(new Date()+"\n");  Thread.sleep(1000*5);  System.out.println(new Date()+"\n");  }catch(Exception e){ System.out.println("Got an exception!");  }  }  }  测量时间,  import java.util.*;  public class DiffDemo{ public static void main(String args[]){ try{ long start=System.currentTimeMillis();  System.out.println(new Date()+"\n");  Thread.sleep(5*10);  System.out.println(new Date()+"\n");  long end=System.currentTimeMillis();  long diff=end-start;  System.out.println("Difference is:"+diff);  }catch(Exception e){ System.out.println("Got an exception!");  }  }  } </xmp></code></pre> <p><span style="font-size: 1em;">Calendar类，</span></p> <p>Calendar类是一个抽象类，</p> <p>创建一个代表系统当前日期的Calendar对象,</p> <p>Calendar c=Calendar.getInstance();//默认是当前日期.</p> <p>创建一个指定日期的Calendar对象,</p> <p>使用Calendar类代表特定的时间，需要首先创建一个Calendar的对象，</p> <p>calendar c1=Calendar.getInstance();</p> <p>c1.set(2002,3-1,12);</p> <p>Calendar类对象字段类型,</p> <p>Calendar.YEAR 年份</p> <p>Calendar.MONTH ,月份</p> <p>Calendar.DAY_OF_MONTH, 日期，和上面的字段,</p> <p>Calendar.HOUR,12小时制的小时</p> <p>Calendar.HOUR_OF_DAY 24小时制的小时</p> <p>Calendar.MINUTE 分钟,</p> <p>Calendar.SECOND 秒</p> <p>Calendar.DAY_OF_WEEK 星期几</p> <p>Calendar类对象信息的设置,</p> <p>Calendar c1=Calendar.getInstance();</p> <p>public final void set(int year,int month,int date)</p> <p>c1.set(2009,6-1,12);</p> <p>利用字段类型设置</p> <p>如果只设定某个字段，</p> <p>public void set(int field,int value)</p> <p>把c1对象代表的日期设置为10号，</p> <p>把c1对象代表的年份设置为2008年，其他的所有数值会被重新计算</p> <p>c1.set(Calendar.YEAR,2000);</p> <p>Add设置,</p> <p>Calendar c1=Calendar.getInstance();</p> <p>把c1对象的日期加上10，也就是c1也就表示为10天后的日期，其他所有的数值会被重新计算</p> <p>把c1对象的日期减去10，也就是c1也就是表示为10天前的日期,其它所有的数值会被重新计算,</p> <p>c1.add(Calendar.DATE,-10);</p> </div> </div> <p></p> <p></p> 			
                    <div class="col-md-12 mt-5">
                                                <p>上一个：<a href="/html/category/article-4001.htm">canvas生成带有二维码的海报</a></p>
                                                <p>下一个：<a href="/html/category/article-4003.htm">【Sharding-JDBC】Sharding-JDBC入门（一）——数据分片</a></p>
                                            </div>

                                    </div>
                <div class="col-md-3">
                  <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-7193.htm" title="58同城茶杯犬狗领养（58同城宠物狗狗出售茶杯犬）">58同城茶杯犬狗领养（58同城宠物狗狗出售茶杯犬）</a></li>
                        <li class="py-2"><a href="/html/category/article-7560.htm" title="被猫抓了一下出了点血多久***（被猫抓伤出血多久要***）">被猫抓了一下出了点血多久***（被猫抓伤出血多久要***）</a></li>
                        <li class="py-2"><a href="/html/category/article-7469.htm" title="烧茶壶哪个品牌好一点(烧水壶十大公认品牌)">烧茶壶哪个品牌好一点(烧水壶十大公认品牌)</a></li>
                        <li class="py-2"><a href="/html/category/article-7836.htm" title="被家猫轻微抓伤有一点渗血要***吗视频（被家猫轻微抓伤有一点渗血要***吗视频讲解）">被家猫轻微抓伤有一点渗血要***吗视频（被家猫轻微抓伤有一点渗血要***吗视频讲解）</a></li>
                        <li class="py-2"><a href="/html/category/article-7514.htm" title="郑州宠物用品批发进货渠道在哪里（郑州宠物用品批发进货渠道在哪里啊）">郑州宠物用品批发进货渠道在哪里（郑州宠物用品批发进货渠道在哪里啊）</a></li>
                        <li class="py-2"><a href="/html/category/article-7146.htm" title="妙三多三联疫苗打几针（妙三多三联是什么意思）">妙三多三联疫苗打几针（妙三多三联是什么意思）</a></li>
                        <li class="py-2"><a href="/html/category/article-7377.htm" title="金庸对各个版本神雕侠侣的评价（神雕侠侣剧情介绍）这样也行？，">金庸对各个版本神雕侠侣的评价（神雕侠侣剧情介绍）这样也行？，</a></li>
                        <li class="py-2"><a href="/html/category/article-8296.htm" title="动物医院游戏 动物医院游戏破解版">动物医院游戏 动物医院游戏破解版</a></li>
                        <li class="py-2"><a href="/html/category/article-7055.htm" title="重庆宠物领养中心有哪些地方好（重庆宠物猫领养中心）">重庆宠物领养中心有哪些地方好（重庆宠物猫领养中心）</a></li>
                        <li class="py-2"><a href="/html/category/article-7054.htm" title="动物医院科室分类（动物医院科室分类标准）">动物医院科室分类（动物医院科室分类标准）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">58</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



               </div>
            </div>
        </div>
    </div>
    <!-- about sectuion end -->
        <!-- copyright section start -->
    <div class="copyright_section">
        <div class="container">
            <div class="row">
                <div class="col-sm-12">
                    <p class="copyright_text">
                        Lebanon Address 版权所有
                        <br />
                        Powered by WordPress
                    </p>
                </div>
            </div>
        </div>
    </div>
    <!-- copyright section end -->
    <!-- Javascript files-->
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/jquery.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/popper.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/bootstrap.bundle.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/jquery-3.0.0.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/plugin.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>
<!DOCTYPE html>
<html lang="zh-CN">

<head>
       <link rel="canonical" href="https://lebanonaddress.github.io/html/category/article-4010.htm" />
    <!-- basic -->
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- mobile metas -->
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="viewport" content="initial-scale=1, maximum-scale=1">
    <link rel="icon" href="/assets/addons/xcblog/img/lebanonaddress/favicon.ico" type="image/x-icon"/>
    <!-- site metas -->
    <title>关于java抽象方法和抽象类的一些理解 - Lebanon Address</title>
        <!-- bootstrap css -->
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/lebanonaddress/bootstrap.min.css">
    <!-- style css -->
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/lebanonaddress/style.css">
    <!-- Responsive-->
    <link rel="stylesheet" href="/assets/addons/xcblog/css/lebanonaddress/responsive.css">
    <!-- Scrollbar Custom CSS -->
    <link rel="stylesheet" href="/assets/addons/xcblog/css/lebanonaddress/jquery.mCustomScrollbar.min.css">
    <!-- Tweaks for older IEs-->
    <link rel="stylesheet" href="https://cdn.bootcdn.net/ajax/libs/font-awesome/4.0.3/css/font-awesome.css">
    <!-- fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600;700&display=swap" rel="stylesheet">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?f480db041fa3a9ffc78a7d6776ae8726";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
       <!-- header section start -->
    <div class="header_section">
        <div class="container">
            <nav class="navbar navbar-expand-lg navbar-light bg-light">
                <div class="logo">
                                        <a href="/">Lebanon Address</a>
                                    </div>
                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarSupportedContent">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
            </nav>
        </div>
    </div>
    <!-- header section end -->
      <!-- services section start -->
      <div class="services_section layout_padding">
         <div class="container">
            <div class="row">
               <div class="col-sm-12">
                  <h1 class="services_taital"><span class="about_icon">关于java抽象方法和抽象类的一些理解 </h1>
                    <p class="nav-box text-center">
                        <a href="/">首页</a> / <a href="/html/category/">文章分类</span>
                    </p>
               </div>
            </div>
         </div>
      </div>
      <!-- services section end -->
    <!-- about sectuion start -->
    <div class="about_section layout_padding">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                      				  				  				<div id="content_views" class="htmledit_views"> <h3>----------------------------------------------------------学习总结，如有不对请不吝赐教</h3> <h1>抽象方法</h1> <p>1.由abstract修饰</p> <p>2.只有方法的定义，没有具体的实现，后面跟分号</p> <pre><code class="language-java">abstract void demo();</code></pre> <p>3.包含抽象方法的类必须是抽象类，否则报错：</p> <p><img fetchpriority="high" decoding="async" alt="" height="130" src="http://img.555519.xyz/uploads/20230118/99027a441202303735fb9fcddd6f8517.jpg"></p> <h1>抽象类</h1> <p><strong>1.由abstract修饰</strong></p> <p><strong>2.包含抽象方法的类必须是抽象类，但抽象类中可以不包含抽象方法</strong></p> <p><strong>3.抽象类不能实例化（不能new对象），但能够作为类型进行变量的声明，并通过向上造型进行赋值（用抽象类的派生类new的对象对抽象类类型的变量进行赋值）</strong></p> <p><img decoding="async" alt="" height="94" src="http://img.555519.xyz/uploads/20230118/fd5d468d3f36a2c74132e338290c25b7.jpg"></p> <pre><code class="language-java">public abstract class AA {     abstract void demo();     public static void main(String[] args) {         AA a=new BB();//向上造型     } } class BB extends AA{     void demo(){     } }</code></pre> <p>&nbsp;在上面，BB作为AA的派生类，会继承AA的抽象方法，如果不对demo()进行重写，则demo()依然是抽象方法，那么BB需要声明为抽象方法，否则报错：</p> <p><img decoding="async" alt="" height="115" src="http://img.555519.xyz/uploads/20230118/7afda3817e8e2290186c30cf72f1053c.jpg"></p> <p>改成抽象的类则BB仍然为抽象类，其中含有抽象方法demo()</p> <p><img loading="lazy" decoding="async" alt="" height="69" src="http://img.555519.xyz/uploads/20230118/705e1b916fca98e8dc49dceba485c2e3.jpg">&nbsp;</p> <p>即：当有派生类继承抽象方法时，若不对抽象方法（所有）进行重写（添加方法体），则认为派生类中仍然含有抽象方法，则该派生类需要修饰为抽象类。并且不能进行实例化（new对象）</p> <p><strong>4.由于3.所以抽象类单独存在没有意义</strong></p> <p><strong>5.扩展：能够直接创建抽象类的数组对象，并且通过向上造型对数组元素进行赋值。</strong></p> <pre><code class="language-java">public abstract class AA {     abstract void demo();     public static void main(String[] args) {         AA[] aa=new AA[10];//这里的抽象类只作为类型声明使用，不涉及实例化，实例化的是数组对象         aa[0]=new BB();     } } class BB extends AA{     void demo(){     } }</code></pre> <h1>使用抽象方法的意义</h1> <p>实际上，使用抽象方法进行重写较于普通方法的重写的优势在于：</p> <p><strong>当对象的行为必须重写，则设计为抽象方法，必须重写才能实现实例化（new对象），而普通的方法可以选择不重写。在开发过程中可以对代码编写起到限制作用</strong></p> </p></div> 			
                    <div class="col-md-12 mt-5">
                                                <p>上一个：<a href="/html/category/article-4009.htm">Java 超详细讲解ThreadLocal类的使用_java</a></p>
                                                <p>下一个：<a href="/html/category/article-4011.htm">光的偏振</a></p>
                                            </div>

                                    </div>
                <div class="col-md-3">
                  <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-6130.htm" title="附近动物诊所在哪里（附近动物店）">附近动物诊所在哪里（附近动物店）</a></li>
                        <li class="py-2"><a href="/html/category/article-4429.htm" title="合肥猫咪领养微信群 合肥猫咪领养微信群号">合肥猫咪领养微信群 合肥猫咪领养微信群号</a></li>
                        <li class="py-2"><a href="/html/category/article-4055.htm" title="Token验证JWT方法">Token验证JWT方法</a></li>
                        <li class="py-2"><a href="/html/category/article-4612.htm" title="猫咪打疫苗针要多少钱（猫咪打疫苗需要花多少钱）">猫咪打疫苗针要多少钱（猫咪打疫苗需要花多少钱）</a></li>
                        <li class="py-2"><a href="/html/category/article-4062.htm" title="Python格式化输出的三种方法（format,f前缀，%s）">Python格式化输出的三种方法（format,f前缀，%s）</a></li>
                        <li class="py-2"><a href="/html/category/article-4149.htm" title="CompletableFuture的使用介绍, CompletableFuture与FutureTask的区别">CompletableFuture的使用介绍, CompletableFuture与FutureTask的区别</a></li>
                        <li class="py-2"><a href="/html/category/article-5595.htm" title="猫抓后多少天过危险期（猫抓后多久发病）">猫抓后多少天过危险期（猫抓后多久发病）</a></li>
                        <li class="py-2"><a href="/html/category/article-4318.htm" title="动物打疫苗去哪里预约呢（动物打疫苗去哪里预约呢）">动物打疫苗去哪里预约呢（动物打疫苗去哪里预约呢）</a></li>
                        <li class="py-2"><a href="/html/category/article-4052.htm" title="Windows如何查看WiFi密码">Windows如何查看WiFi密码</a></li>
                        <li class="py-2"><a href="/html/category/article-4505.htm" title="动物医院咨询电话号码（动物医院的电话号码）">动物医院咨询电话号码（动物医院的电话号码）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">38</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



               </div>
            </div>
        </div>
    </div>
    <!-- about sectuion end -->
        <!-- copyright section start -->
    <div class="copyright_section">
        <div class="container">
            <div class="row">
                <div class="col-sm-12">
                    <p class="copyright_text">
                        Lebanon Address 版权所有
                        <br />
                        Powered by WordPress
                    </p>
                </div>
            </div>
        </div>
    </div>
    <!-- copyright section end -->
    <!-- Javascript files-->
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/jquery.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/popper.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/bootstrap.bundle.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/jquery-3.0.0.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/plugin.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>
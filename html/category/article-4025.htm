<!DOCTYPE html>
<html lang="zh-CN">

<head>
       <link rel="canonical" href="https://lebanonaddress.github.io/html/category/article-4025.htm" />
    <!-- basic -->
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- mobile metas -->
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="viewport" content="initial-scale=1, maximum-scale=1">
    <link rel="icon" href="/assets/addons/xcblog/img/lebanonaddress/favicon.ico" type="image/x-icon"/>
    <!-- site metas -->
    <title>Java原生HttpClient的使用详解_java - Lebanon Address</title>
        <!-- bootstrap css -->
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/lebanonaddress/bootstrap.min.css">
    <!-- style css -->
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/lebanonaddress/style.css">
    <!-- Responsive-->
    <link rel="stylesheet" href="/assets/addons/xcblog/css/lebanonaddress/responsive.css">
    <!-- Scrollbar Custom CSS -->
    <link rel="stylesheet" href="/assets/addons/xcblog/css/lebanonaddress/jquery.mCustomScrollbar.min.css">
    <!-- Tweaks for older IEs-->
    <link rel="stylesheet" href="https://cdn.bootcdn.net/ajax/libs/font-awesome/4.0.3/css/font-awesome.css">
    <!-- fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600;700&display=swap" rel="stylesheet">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?f480db041fa3a9ffc78a7d6776ae8726";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
       <!-- header section start -->
    <div class="header_section">
        <div class="container">
            <nav class="navbar navbar-expand-lg navbar-light bg-light">
                <div class="logo">
                                        <a href="/">Lebanon Address</a>
                                    </div>
                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarSupportedContent">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
            </nav>
        </div>
    </div>
    <!-- header section end -->
      <!-- services section start -->
      <div class="services_section layout_padding">
         <div class="container">
            <div class="row">
               <div class="col-sm-12">
                  <h1 class="services_taital"><span class="about_icon">Java原生HttpClient的使用详解_java </h1>
                    <p class="nav-box text-center">
                        <a href="/">首页</a> / <a href="/html/category/">文章分类</span>
                    </p>
               </div>
            </div>
         </div>
      </div>
      <!-- services section end -->
    <!-- about sectuion start -->
    <div class="about_section layout_padding">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                      				  				  				<div id="navCategory"> <h5 class="catalogue">目录</h5> <ul class="first_class_ul"> <li><a href="#_label0" rel="nofollow">1.信任证书管理类</a></li> <li><a href="#_label1" rel="nofollow">2.HttpClient类</a></li> <li><a href="#_label2" rel="nofollow">3.发送请求工具类</a></li> <li><a href="#_label3" rel="nofollow">4.测试</a></li> </ul> </div> <p>提到Java发送HTTP请求，大家首先想到的是用apache的HttpClient，或者squareup的OkHttp。而在Java11之前，原生Java对此的支持还是比较差的，虽然可以HttpURLConnection、URLConnection、Socket等自带的类发送请求，但是操作比较复杂。直到Java11发布，Java本身也自带了HttpClient。自2020年初，我就在开发中广泛使用了这一新特性，感觉使用体验也还可以。现总结成博客，供大家参考。</p> <p class="maodian"><a name="_label0" rel="nofollow"></a></p> <h2>1.信任证书管理类</h2> <div class="ay1code"> <pre class="brush:java;">package cn.wja.component;  import javax.net.ssl.TrustManager;  import javax.net.ssl.X509TrustManager;  import java.security.cert.X509Certificate;      class MyX509TrustManager implements X509TrustManager {      @Override      public void checkClientTrusted(X509Certificate[] x509Certificates, String s)  {      }        @Override      public void checkServerTrusted(X509Certificate[] x509Certificates, String s)  {      }        @Override      public X509Certificate[] getAcceptedIssuers() {          return null;      }        public static TrustManager[] getTrustManagers() {          TrustManager[] trustAllCertificates = {new MyX509TrustManager()};          return trustAllCertificates;      }  }  </pre> </div> <p class="maodian"><a name="_label1" rel="nofollow"></a></p> <h2>2.HttpClient类</h2> <div class="ay1code"> <pre class="brush:java;">package cn.wja.component;  import javax.net.ssl.SSLContext;  import javax.net.ssl.SSLParameters;  import javax.net.ssl.TrustManager;  import java.net.http.HttpClient;  import java.security.KeyManagementException;  import java.security.NoSuchAlgorithmException;  import java.security.SecureRandom;  import java.time.Duration;    public class MyHttpClient {      static public HttpClient getClient() throws NoSuchAlgorithmException, KeyManagementException {          TrustManager[] trustManagers = MyX509TrustManager.getTrustManagers();          var timeoutInSeconds = 60;          SSLParameters sslParams = new SSLParameters();          sslParams.setEndpointIdentificationAlgorithm("");          SSLContext sc = SSLContext.getInstance("SSL");          //取消主机名验证          System.setProperty("jdk.internal.httpclient.disableHostnameVerification", "true");          sc.init(null, trustManagers, new SecureRandom());          return HttpClient.newBuilder()                  .connectTimeout(Duration.ofMillis(timeoutInSeconds * 1000))                  .sslContext(sc)                  .sslParameters(sslParams)                  .followRedirects(HttpClient.Redirect.NEVER)                  .version(HttpClient.Version.HTTP_2)                  .build();      }  }  </pre> </div> <p class="maodian"><a name="_label2" rel="nofollow"></a></p> <h2>3.发送请求工具类</h2> <div class="ay1code"> <pre class="brush:java;">package cn.wja.util;    import cn.wja.component.MyHttpClient;  import java.net.URI;  import java.net.http.HttpClient;  import java.net.http.HttpRequest;  import java.net.http.HttpResponse;      import static java.nio.charset.StandardCharsets.UTF_8;    public class HttpUtils {        public static HttpResponse&lt;String&gt; sendGet(String urlStr, String cookieStr) throws Exception {          HashMap&lt;String, String&gt; hashMap = new HashMap&lt;&gt;();          hashMap.put("Cookie",cookieStr);          return sendGet(urlStr,hashMap);      }          public static HttpResponse&lt;String&gt; sendGet(String urlStr, Map&lt;String,String&gt; headers) throws KeyManagementException, NoSuchAlgorithmException, IOException, InterruptedException {          HttpClient client = MyHttpClient.getClient();          HttpRequest.Builder reqBuilder = getReqBuilder(urlStr);          reqBuilder.GET();          for (String key:headers.keySet()){              reqBuilder.header(key, headers.get(key));          }          HttpRequest request = reqBuilder.build();          HttpResponse&lt;String&gt; result = client.send(request, HttpResponse.BodyHandlers.ofString(UTF_8));          return result;      }        private static HttpResponse&lt;String&gt; sendPost(String contentType, String urlStr, String bodyStr, String cookieStr) throws Exception {          HttpClient client = MyHttpClient.getClient();          HttpRequest.Builder reqBuilder = getReqBuilder(urlStr);          HttpRequest.BodyPublisher bodyPublisher = HttpRequest.BodyPublishers.ofString(bodyStr);          reqBuilder.header("Content-Type", contentType)                  .POST(bodyPublisher)                  .header("Cookie", cookieStr);          HttpRequest request = reqBuilder.build();          HttpResponse&lt;String&gt; result = client.send(request, HttpResponse.BodyHandlers.ofString(UTF_8));          return result;      }            public static HttpResponse&lt;String&gt; sendFormPost(String urlStr, String formStr, String cookieStr) throws Exception {          return sendPost("application/x-www-form-urlencoded;charset=utf-8", urlStr, formStr, cookieStr);      }        public static HttpResponse&lt;String&gt; sendJsonPost(String urlStr, String jsonStr, String cookieStr) throws Exception {          return sendPost("application/json;charset=utf-8", urlStr, jsonStr, cookieStr);      }        public static HttpRequest.Builder getReqBuilder(String urlStr) {          return HttpRequest.newBuilder()                  .uri(URI.create(urlStr))                  .header("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:96.0) Gecko/20100101 Firefox/96.0");      }  }    </pre> </div> <p class="maodian"><a name="_label3" rel="nofollow"></a></p> <h2>4.测试</h2> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220420/bac4335bbb729cce8d82390bd4a7383b.jpg"></p> <p>测试表明，通过调用工具类方法，可以直接发送GET请求和带Form表单/Json的POST请求。如果您要发送其他形式的HTTP请求，也可以参照上述代码自行实现。</p> 			
                    <div class="col-md-12 mt-5">
                                                <p>上一个：<a href="/html/category/article-4024.htm">网络协议之:socket协议详解之Unix domain Socket</a></p>
                                                <p>下一个：<a href="/html/category/article-4026.htm">ES6可选链操作符和空值合并运算符</a></p>
                                            </div>

                                    </div>
                <div class="col-md-3">
                  <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-4037.htm" title="C++中的匿名对象的概念和使用">C++中的匿名对象的概念和使用</a></li>
                        <li class="py-2"><a href="/html/category/article-4051.htm" title="vue项目运行后自动运行浏览器（vue2/vue3）">vue项目运行后自动运行浏览器（vue2/vue3）</a></li>
                        <li class="py-2"><a href="/html/category/article-4061.htm" title="如何在Android sqlite中删除表？">如何在Android sqlite中删除表？</a></li>
                        <li class="py-2"><a href="/html/category/article-4012.htm" title="修改docker 默认镜像存储路径">修改docker 默认镜像存储路径</a></li>
                        <li class="py-2"><a href="/html/category/article-4058.htm" title="TS语言与JS语言的区别">TS语言与JS语言的区别</a></li>
                        <li class="py-2"><a href="/html/category/article-4050.htm" title="C ++程序实施Rabin-Miller素性测试以检查给定数字是否为素数">C ++程序实施Rabin-Miller素性测试以检查给定数字是否为素数</a></li>
                        <li class="py-2"><a href="/html/category/article-4011.htm" title="光的偏振">光的偏振</a></li>
                        <li class="py-2"><a href="/html/category/article-4040.htm" title="@order注解 解答">@order注解 解答</a></li>
                        <li class="py-2"><a href="/html/category/article-4031.htm" title="使用Nginx实现多个Tomcat负载均衡">使用Nginx实现多个Tomcat负载均衡</a></li>
                        <li class="py-2"><a href="/html/category/article-4023.htm" title="ElasticSearch学习：springboot集成ElasticSearch">ElasticSearch学习：springboot集成ElasticSearch</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">58</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



               </div>
            </div>
        </div>
    </div>
    <!-- about sectuion end -->
        <!-- copyright section start -->
    <div class="copyright_section">
        <div class="container">
            <div class="row">
                <div class="col-sm-12">
                    <p class="copyright_text">
                        Lebanon Address 版权所有
                        <br />
                        Powered by WordPress
                    </p>
                </div>
            </div>
        </div>
    </div>
    <!-- copyright section end -->
    <!-- Javascript files-->
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/jquery.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/popper.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/bootstrap.bundle.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/jquery-3.0.0.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/plugin.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>
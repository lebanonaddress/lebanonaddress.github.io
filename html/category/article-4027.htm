<!DOCTYPE html>
<html lang="zh-CN">

<head>
       <link rel="canonical" href="https://lebanonaddress.github.io/html/category/article-4027.htm" />
    <!-- basic -->
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- mobile metas -->
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="viewport" content="initial-scale=1, maximum-scale=1">
    <link rel="icon" href="/assets/addons/xcblog/img/lebanonaddress/favicon.ico" type="image/x-icon"/>
    <!-- site metas -->
    <title>前端需要了解的颜色模型，RGB、HSL和HSV_在线工具 - Lebanon Address</title>
        <!-- bootstrap css -->
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/lebanonaddress/bootstrap.min.css">
    <!-- style css -->
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/lebanonaddress/style.css">
    <!-- Responsive-->
    <link rel="stylesheet" href="/assets/addons/xcblog/css/lebanonaddress/responsive.css">
    <!-- Scrollbar Custom CSS -->
    <link rel="stylesheet" href="/assets/addons/xcblog/css/lebanonaddress/jquery.mCustomScrollbar.min.css">
    <!-- Tweaks for older IEs-->
    <link rel="stylesheet" href="https://cdn.bootcdn.net/ajax/libs/font-awesome/4.0.3/css/font-awesome.css">
    <!-- fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600;700&display=swap" rel="stylesheet">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?f480db041fa3a9ffc78a7d6776ae8726";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
       <!-- header section start -->
    <div class="header_section">
        <div class="container">
            <nav class="navbar navbar-expand-lg navbar-light bg-light">
                <div class="logo">
                                        <a href="/">Lebanon Address</a>
                                    </div>
                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarSupportedContent">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
            </nav>
        </div>
    </div>
    <!-- header section end -->
      <!-- services section start -->
      <div class="services_section layout_padding">
         <div class="container">
            <div class="row">
               <div class="col-sm-12">
                  <h1 class="services_taital"><span class="about_icon">前端需要了解的颜色模型，RGB、HSL和HSV_在线工具 </h1>
                    <p class="nav-box text-center">
                        <a href="/">首页</a> / <a href="/html/category/">文章分类</span>
                    </p>
               </div>
            </div>
         </div>
      </div>
      <!-- services section end -->
    <!-- about sectuion start -->
    <div class="about_section layout_padding">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                      				  				  				<p>颜色模型，是用来表示颜色的数学模型。比如最常见的 <code>RGB模型</code>，使用 <code>红绿蓝</code> 三色来表示颜色。<br /> 一般的颜色模型，可以按照如下分类：</p> <blockquote> <p>面向硬件设备的颜色模型：RGB，CMYK，YCrCb。<br /> 面向视觉感知的颜色模型：HSL，HSV(B)，HSI，Lab。</p> </blockquote> <p>不同的颜色模型有不同的应用场景，而RGB模型适合于显示器这样的的设备。</p> <p>其中，<strong>前端支持的是 <code>RGB</code>、<code>HSL</code></strong>，即在前端页面中只有这两种模型的颜色值可以有效展示出来。<br /> 而对于 <code>HSV</code>，则是我们在创建颜色选择器插件时所需要了解的一种模型。<br /> 目前，<code>chrome</code> 浏览器，实现 <code>H5</code> 的颜色色盘，就是基于 <code>HSV</code> 模型：<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220501/9bd900d62dae0420fdd123ded8f49e2e.jpg" alt="前端需要了解的颜色模型，RGB、HSL和HSV_在线工具"><br /> 注意：<code>fixfore</code> 浏览器支持的仍然是电脑系统色盘（如win系统下，与画图软件中编辑颜色的色盘一样）。</p> <p>本文将主要介绍 <code>RGB</code>、<code>HSL</code>、<code>HSV</code> 这三种模型。</p> <h2 id="rgb模型">RGB模型</h2> <p><strong>RGB</strong> 即常说的 <code>红(R)、绿(G)、蓝(B)</code> 三原色模型，是运用最广泛的颜色模型。<br /> 特别是在前端开发中，几乎都使用该模型处理颜色。如：<code>rgb(0, 0, 255)</code>，<code>#d3d3d3</code>。<br /> 该模型通过红绿蓝三个颜色通道的变化和相互之间的混合叠加，使用不同的强度，表现出不同的颜色。<br /> 它是一种加色混色模型，在叠加混合的过程中，亮度等于色彩亮度的综合，混合的越多亮度就越高。</p> <p>根据三色的取值不同，一般有以下几种类型：</p> <ul> <li>R5G5B5(A1)：16位，各色都用5位表示，取值范围 <code>0-31(2^5 - 1)</code>，剩余1位作Alpha通道或者不用。</li> <li>R5G6B5：16位，R和B占用5位，取值范围 <code>0-31(2^5)</code>；G占用6位，取值范围 <code>0-63(2^6 - 1)</code>。</li> <li>R8G8B8：24位，各色都用8位表示，取值范围为 <code>0-255(2^8 - 1)</code>。<br /> 最多能有 <code>2^24</code> 种颜色，从24位开始的颜色就是真彩色，基本达到人眼极限。</li> <li>R8G8B8(A8)：32位，各色都用8位表示，取值范围为 <code>0-255(2^8 - 1)</code>，剩余8位作Alpha通道或者不用。</li> </ul> <p>这其中，最常见的当然就是24位和32位的类型。<br /> 三色通道中每个颜色有256阶的亮度，为0时最暗，255时最亮。<br /> 如果三色的数值都相同时，就会产生不同灰度值的灰度色调，都为0时最暗黑色，都为255时最亮白色。</p> <h3 id="rgb颜色值">RGB颜色值</h3> <p>先看下 <code>RGB</code> 颜色值在前端的展现，如红色：</p> <pre><code class="language-js">'rgb(255, 0, 0)' 'rgba(255, 0, 0, 1)' // 带透明度 '#ff0000' '#f00' // 缩写 'red' // 颜色名称 </code></pre> <p>描述RGB模型，使用的颜色值，有 <code>rgb</code> 和 <code>hex16</code> 进制两种方式。</p> <ul> <li> <code>rgb(0,0,0)</code> 表示法，一般情况下，红绿蓝三色分别取值范围 <code>0-255</code>，如果加上 <code>alpha</code> 透明通道，则为 <code>rgba(0,0,0,1)</code> 。</li> <li> <code>hex</code> 16进制表示法，采用十六进制对24比特的一种展示方式，如 <code>#000000</code>，共6位，每两位分别对应红绿蓝，相同时可缩写为 <code>#000</code>。<br /><code>hex</code> 也可以使用 <code>#00000000</code>，后面加上透明度的十六进制数值。</li> </ul> <p>此外，在前端开发中，还可以使用颜色名称如 <code>red</code>、<code>green</code>、<code>gray</code> 等标识颜色。<br /> 实际上，这里的颜色名称仍然是对应的一个RGB颜色值，有一个规定的颜色名称与值的关系表。大部分的颜色单词基本都能使用。</p> <p>上面两种表示法的简单转换关系，如下所示。</p> <h3 id="rgb-转-hex">rgb 转 hex</h3> <pre><code class="language-js">function getHex (num) {   let val = num.toString(16)   val = (val.length === 1) ? ('0' + val) : val   return val } function rgbaToHexa (red, green, blue, alpha) {   red = getHex(red)   green = getHex(green)   blue = getHex(blue)   alpha = Math.round(alpha * 255)   alpha = getHex(alpha)   return '#' + red + green + blue + alpha } </code></pre> <h3 id="hex-转-rgb">hex 转 rgb</h3> <pre><code class="language-js">function hexaToRgba (color) {   const value = color.slice(color.indexOf('#') + 1)   const isShort = value.length === 3 || value.length === 4   const hasAlpha = value.length === 4 || value.length === 8   const r = isShort ? (value.charAt(0) + value.charAt(0)) : value.substring(0, 2)   const g = isShort ? (value.charAt(1) + value.charAt(1)) : value.substring(2, 4)   const b = isShort ? (value.charAt(2) + value.charAt(2)) : value.substring(4, 6)   let a = hasAlpha ? (isShort ? (value.charAt(3) + value.charAt(3)) : value.substring(6, 8)) : 'FF'   a = parseFloat((parseInt(a, 16) / 255).toFixed(2))   return [parseInt(r, 16), parseInt(g, 16), parseInt(b, 16), a] } </code></pre> <h2 id="hsl模型">HSL模型</h2> <p>前端在颜色的处理上，除了支持 <code>RGB</code> 模型外，另外支持的就只有 <code>HSL</code> 模型，所以我们需要了下解该模型。</p> <p><code>HSL</code> 颜色值表示，红色：</p> <pre><code class="language-js">hsl(0, 100%, 50%) hsla(0, 100%, 50%, 1) // 带透明度 </code></pre> <p><strong>HSL</strong> 是对<code>色相H(hue)</code>、<code>饱和度S(saturation)</code>、<code>亮度L(lightness)</code>的处理得到颜色的一种模型。</p> <ul> <li> <p><strong>色相(H)：</strong><br /> 色相、色调，代表人眼所能看到的不同的颜色，本质就是一种颜色。与 <code>HSV(B)</code> 模型中的 <code>H</code> 概念相同。<br /> 色相的定义中，许多的颜色分布在一个圆环上，取值范围则是 <strong>0-360度</strong>，每个角度代表着一种颜色。<br /> 在HSL和HSV的模型中，色相是以六大主色为基础，他们分别按 60 度的间隔排列在圆环上。这六大主色分别是：360°/0°红、60°黄、120°绿、180°青、240°蓝、300°洋红。<br /> 而在前端进行处理时，常常把圆环处理成长方形的色块，通过颜色的线性渐变方式进行分段处理，角度换算成一定的比例，如下所示：<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220501/297b374bb71b1eb7fa04e877bf202783.jpg" alt="前端需要了解的颜色模型，RGB、HSL和HSV_在线工具"></p> <pre><code class="language-css">linear-gradient(90deg, #f00, #ff0 17%, #0f0 33%, #0ff 50%, #00f 67%, #f0f 83%, #f00); </code></pre> </li> <li> <p><strong>饱和度(S)：</strong><br /> 饱和度是指颜色的强度或纯度，使用 <code>0 ~ 100%</code> 的百分比来度量。<br /> 表示色相中颜色成分所占的比例，数值越大，颜色中的灰色越少，颜色越鲜艳，呈现的是一种从灰色到色相颜色的变化。</p> </li> <li> <p><strong>亮度(L)：</strong><br /> 表现颜色的明暗程度，使用 <code>0 ~ 100%</code> 的百分比来度量。<br /> 反映色彩中混入的黑白两色，50% 处只有纯色，小于 50% 时，数值越小混入的黑色越多，越接近于黑色；大于 50% 时，数值越大混入的白色越多，越接近于白色。<br /> L最大时必为白色，L最小时必为黑色。<br /><strong>体现的是从黑色到色相(H)选择颜色再到白色的过渡。</strong></p> </li> </ul> <h2 id="hsvb模型">HSV(B)模型</h2> <p><code>HSV</code> 颜色值表示，红色：</p> <pre><code class="language-js">// 前端不支持 hsv(0, 100%, 100%) hsva(0, 100%, 100%, 1) // 带透明度 </code></pre> <p><strong>HSV</strong> 采用<code>色相H(hue)</code>、<code>饱和度S(saturation)</code>、<code>明度V(Value)</code>3个参数来表示颜色的一种方式。<br /><code>HSV</code> 和 <code>HSL</code> 两个模型都是更偏向于视觉上直观的感觉。<br /> 而<code>HSV</code> 与 <code>HSB</code> 的内容基本是一样的，可以理解为两种不同写法而已，其中 B( brightness )。</p> <ul> <li> <p><strong>色相(H)：</strong><br /> 同 <code>HSL</code> 模型中的 <code>H</code> 色相。</p> </li> <li> <p><strong>饱和度(S)：</strong><br /> 饱和度是指颜色的强度或纯度，使用 <code>0 ~ 100%</code> 的百分比来度量。<br /> 在 <code>HSV</code> 中更多的是反映色相的颜色中混入白色的值，值越大白色越少色相颜色越纯，值越小白色越多色相颜色越淡。</p> </li> <li> <p><strong>明度(V)：</strong><br /> 表现颜色的明暗程度，使用 <code>0 ~ 100%</code> 的百分比来度量。<br /> 反映色相的颜色中混入的黑色的值，值越小黑色越多颜色更暗(黑)，值越大黑色越少颜色更纯(亮)。<br /><strong>体现的是从黑色到色相(H)选择颜色的过渡。</strong></p> </li> </ul> <h2 id="rgb-与-hsl-的转换">RGB 与 HSL 的转换</h2> <p>下面是常用的 <code>rgb</code> 颜色值与 <code>hsl</code> 之间互相转换的代码。<br /><strong>注意：</strong><br /> 这两个过程中，由于取整去除了小数位，并不是完全可逆的，可能存在个别个位数的差值。<br /> 虽有些微差别，但在页面颜色显示上基本没分别，因为人眼分辨不出来。</p> <h3 id="rgb-转-hsl">rgb 转 hsl</h3> <pre><code class="language-js">function rgbToHsl (red, green, blue) {   red = red / 255   green = green / 255   blue = blue / 255    let hue = saturation = lightness = 0   const max = Math.max(red, green, blue)   const min = Math.min(red, green, blue)   const diff = max - min   const sum = max + min    lightness = sum / 2      if (diff) {     saturation = lightness &gt; 0.5 ? diff / (2 - sum) : diff / sum     switch (max) {       case red:         hue = (green - blue) / diff + (green &lt; blue ? 6 : 0)         break       case green:         hue = (blue - red) / diff + 2         break       case blue:         hue = (red - green) / diff + 4         break     }     hue = hue / 6   }    hue = Math.round(hue * 360)   saturation = Math.round(saturation * 100)   lightness = Math.round(lightness * 100)   return [hue, saturation, lightness] } </code></pre> <h3 id="hsl-转-rgb">hsl 转 rgb</h3> <pre><code class="language-js">function hslToRgb(hue, saturation, lightness) {   hue = hue / 360   saturation = saturation / 100   lightness = lightness / 100   let red, green, blue    const hue2rgb = (val1, val2, vH) =&gt; {     vH = vH &lt; 0 ? (vH + 1) : vH &gt; 1 ? (vH - 1) : vH      if (vH &lt; 1 / 6) {       return val1 + (val2 - val1) * 6 * vH     }     if (vH &lt; 1 / 2) {       return val2     }     if (vH &lt; 2 / 3) {       return val1 + (val2 - val1) * (2 / 3 - vH) * 6     }     return val1   }    if (saturation === 0) {     red = green = blue = lightness;   } else {     const val2 = lightness &lt;= 0.5 ? lightness * (saturation + 1) : (lightness + saturation) - (lightness * saturation)     const val1 = lightness * 2 - val2      red = hue2rgb(val1, val2, hue + 1 / 3)     green = hue2rgb(val1, val2, hue)     blue = hue2rgb(val1, val2, hue - 1 / 3)   }    red = Math.round(red * 255)   green = Math.round(green * 255)   blue = Math.round(blue * 255)   return [red, green, blue] } </code></pre> 			
                    <div class="col-md-12 mt-5">
                                                <p>上一个：<a href="/html/category/article-4026.htm">ES6可选链操作符和空值合并运算符</a></p>
                                                <p>下一个：<a href="/html/category/article-4028.htm">Halo 开源项目学习评论与点赞</a></p>
                                            </div>

                                    </div>
                <div class="col-md-3">
                  <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-4395.htm" title="安又琪个人资料（安又琪图片 个人资料 感情生活）">安又琪个人资料（安又琪图片 个人资料 感情生活）</a></li>
                        <li class="py-2"><a href="/html/category/article-5596.htm" title="自家宠物猫轻微抓伤有一点渗血（自家猫咪抓了一点点血）">自家宠物猫轻微抓伤有一点渗血（自家猫咪抓了一点点血）</a></li>
                        <li class="py-2"><a href="/html/category/article-7009.htm" title="咸鱼无货源赚钱吗是真的吗（闲鱼无货源赚钱详细教程）">咸鱼无货源赚钱吗是真的吗（闲鱼无货源赚钱详细教程）</a></li>
                        <li class="py-2"><a href="/html/category/article-4575.htm" title="狗粮颗粒机家用小型（制作狗粮配方 颗粒机器）">狗粮颗粒机家用小型（制作狗粮配方 颗粒机器）</a></li>
                        <li class="py-2"><a href="/html/category/article-6916.htm" title="制狗粮的机器设备有哪些（机器制作狗粮的配方大全）">制狗粮的机器设备有哪些（机器制作狗粮的配方大全）</a></li>
                        <li class="py-2"><a href="/html/category/article-6218.htm" title="外卖预制菜十大品牌">外卖预制菜十大品牌</a></li>
                        <li class="py-2"><a href="/html/category/article-5981.htm" title="兰州狗粮批发市场地址电话（兰州卖狗粮的地方）">兰州狗粮批发市场地址电话（兰州卖狗粮的地方）</a></li>
                        <li class="py-2"><a href="/html/category/article-6779.htm" title="胶原蛋白肽粉哪个品牌好一点(胶原蛋白肽粉哪个品牌好一点儿)">胶原蛋白肽粉哪个品牌好一点(胶原蛋白肽粉哪个品牌好一点儿)</a></li>
                        <li class="py-2"><a href="/html/category/article-4540.htm" title="普通人怎么考兽医证难不难呀（怎么考兽医资格证需要什么条件）">普通人怎么考兽医证难不难呀（怎么考兽医资格证需要什么条件）</a></li>
                        <li class="py-2"><a href="/html/category/article-7101.htm" title="动物疫苗生产厂家排名榜最新名单查询（动物疫苗生产厂家排名榜最新名单查询官网）">动物疫苗生产厂家排名榜最新名单查询（动物疫苗生产厂家排名榜最新名单查询官网）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">8</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



               </div>
            </div>
        </div>
    </div>
    <!-- about sectuion end -->
        <!-- copyright section start -->
    <div class="copyright_section">
        <div class="container">
            <div class="row">
                <div class="col-sm-12">
                    <p class="copyright_text">
                        Lebanon Address 版权所有
                        <br />
                        Powered by WordPress
                    </p>
                </div>
            </div>
        </div>
    </div>
    <!-- copyright section end -->
    <!-- Javascript files-->
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/jquery.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/popper.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/bootstrap.bundle.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/jquery-3.0.0.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/plugin.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>
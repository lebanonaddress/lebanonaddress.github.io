<!DOCTYPE html>
<html lang="zh-CN">

<head>
       <link rel="canonical" href="https://lebanonaddress.github.io/html/category/article-4031.htm" />
    <!-- basic -->
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- mobile metas -->
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="viewport" content="initial-scale=1, maximum-scale=1">
    <link rel="icon" href="/assets/addons/xcblog/img/lebanonaddress/favicon.ico" type="image/x-icon"/>
    <!-- site metas -->
    <title>使用Nginx实现多个Tomcat负载均衡 - Lebanon Address</title>
        <!-- bootstrap css -->
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/lebanonaddress/bootstrap.min.css">
    <!-- style css -->
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/lebanonaddress/style.css">
    <!-- Responsive-->
    <link rel="stylesheet" href="/assets/addons/xcblog/css/lebanonaddress/responsive.css">
    <!-- Scrollbar Custom CSS -->
    <link rel="stylesheet" href="/assets/addons/xcblog/css/lebanonaddress/jquery.mCustomScrollbar.min.css">
    <!-- Tweaks for older IEs-->
    <link rel="stylesheet" href="https://cdn.bootcdn.net/ajax/libs/font-awesome/4.0.3/css/font-awesome.css">
    <!-- fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600;700&display=swap" rel="stylesheet">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?f480db041fa3a9ffc78a7d6776ae8726";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
       <!-- header section start -->
    <div class="header_section">
        <div class="container">
            <nav class="navbar navbar-expand-lg navbar-light bg-light">
                <div class="logo">
                                        <a href="/">Lebanon Address</a>
                                    </div>
                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarSupportedContent">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
            </nav>
        </div>
    </div>
    <!-- header section end -->
      <!-- services section start -->
      <div class="services_section layout_padding">
         <div class="container">
            <div class="row">
               <div class="col-sm-12">
                  <h1 class="services_taital"><span class="about_icon">使用Nginx实现多个Tomcat负载均衡 </h1>
                    <p class="nav-box text-center">
                        <a href="/">首页</a> / <a href="/html/category/">文章分类</span>
                    </p>
               </div>
            </div>
         </div>
      </div>
      <!-- services section end -->
    <!-- about sectuion start -->
    <div class="about_section layout_padding">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                      				  				  				<div id="content_views" class="markdown_views prism-dracula"> <h2> <a id="_Tomcat_0" rel="nofollow"></a>第一步. 安装多个Tomcat,用来集群:</h2> <p>安装多个Tomcat的步骤,在这篇博客里面:<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://blog.csdn.net/a1422655169/article/details/115360274?spm=1001.2014.3001.5501"  rel="nofollow">https://blog.csdn.net/a1422655169/article/details/115360274?spm=1001.2014.3001.5501</a></p> <h2> <a id="_Nginx_2" rel="nofollow"></a>第二步. 安装Nginx:</h2> <p>安装Nginx的步骤我放在这篇博客里面了:<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://blog.csdn.net/a1422655169/article/details/115361095?spm=1001.2014.3001.5501"  rel="nofollow">https://blog.csdn.net/a1422655169/article/details/115361095?spm=1001.2014.3001.5501</a></p> <h2> <a id="_shell_4" rel="nofollow"></a>第三步. 编写shell脚本:</h2> <p>这里使用的是编写shell脚本的方式来处理。<br /> 打开编译:<code>vi /etc/init.d/nginx</code> (输入下面的代码)</p> <pre><code class="prism language-xml">#!/bin/bash # nginx Startup script for the Nginx HTTP Server # it is v.0.0.2 version. # chkconfig: - 85 15 # description: Nginx is a high-performance web and proxy server. #              It has a lot of features, but it's not for everyone. # processname: nginx # pidfile: /var/run/nginx.pid # config: /usr/local/nginx/conf/nginx.conf nginxd=/usr/myfile/sbin/nginx nginx_config=/usr/myfile/conf/nginx.conf nginx_pid=/var/run/nginx.pid RETVAL=0 prog="nginx" # Source function library. . /etc/rc.d/init.d/functions # Source networking configuration. . /etc/sysconfig/network # Check that networking is up. [ ${NETWORKING} = "no" ] &amp;&amp; exit 0 [ -x $nginxd ] || exit 0 # Start nginx daemons functions. start() { if [ -e $nginx_pid ];then    echo "nginx already running...."    exit 1 fi    echo -n $"Starting $prog: "    daemon $nginxd -c ${nginx_config}    RETVAL=$?    echo    [ $RETVAL = 0 ] &amp;&amp; touch /var/lock/subsys/nginx    return $RETVAL } # Stop nginx daemons functions. stop() {         echo -n $"Stopping $prog: "         killproc $nginxd         RETVAL=$?         echo         [ $RETVAL = 0 ] &amp;&amp; rm -f /var/lock/subsys/nginx /var/run/nginx.pid } # reload nginx service functions. reload() {     echo -n $"Reloading $prog: "     #kill -HUP `cat ${nginx_pid}`     killproc $nginxd -HUP     RETVAL=$?     echo } # See how we were called. case "$1" in start)         start         ;; stop)         stop         ;; reload)         reload         ;; restart)         stop         start         ;; status)         status $prog         RETVAL=$?         ;; *)         echo $"Usage: $prog {start|stop|restart|reload|status|help}"         exit 1 esac exit $RETVAL </code></pre> <p>编译好之后先按<mark>esc</mark>键,然后 <mark>:wq</mark> 保存并退出。</p> <h2> <a id="__85" rel="nofollow"></a>第四步. 设置文件访问权限:</h2> <p>命令:<code>chmod a+x /etc/init.d/nginx</code> (a+x ==&gt; all user can execute 所有用户可执行)<br />   这样在控制台就很容易的操作nginx了：查看Nginx当前状态、启动Nginx、停止Nginx、重启Nginx…<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230119/03ac1696ac239aa9ab605e03f6ab8945.jpg" alt="使用Nginx实现多个Tomcat负载均衡"><br />   如果修改了nginx的配置文件nginx.conf，也可以使用上面的命令重新加载新的配置文件并运行，可以将此命令加入到rc.local文件中，这样开机的时候nginx就默认启动了</p> <p>  上面的方法完成了用脚本管理nginx服务的功能，但是还是不太方便，比如要设置nginx开机启动等。这时可以使用chkconfig来设置。</p> <p><strong>先将nginx服务加入chkconfig管理列表：</strong><br /><code>chkconfig --add /etc/init.d/nginx</code></p> <p>  加完这个之后，就可以使用service对nginx进行启动，重启等操作了。<br /><code>service nginx start</code><br /><code>service nginx stop</code></p> <h2> <a id="_rclocal_101" rel="nofollow"></a>第五步. 加入到rc.local文件中</h2> <p><strong>1.</strong> 使用命令:<code>vi /etc/rc.local </code>进入此文件,并在此文件中加入一行 <code>/etc/init.d/nginx start</code> 保存并退出，下次重启会生效。<br /><strong>2.</strong> 按<mark>ESC</mark> 后 <mark>:wq</mark></p> <h2> <a id="__104" rel="nofollow"></a>第六步. 实现负载均衡:</h2> <p>==在/etc/profile 下进行三个Tomcat的配置,==详情见博客:<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://blog.csdn.net/a1422655169/article/details/115360274?spm=1001.2014.3001.5501"  rel="nofollow">Linux虚拟机安装多个Tomcat</a><br /> 修改三个Tomcat的端口 8080 8081 8082</p> <h2> <a id="_usrlocalnginconfnginxconf_107" rel="nofollow"></a>第七步. 修改/usr/local/ngin/conf/nginx.conf</h2> <p>配置文件的具体位置可以在nginx启动的情查看进程看:<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230119/bbcfbe59f3ee76705a48fe2d59414d05.jpg" alt="使用Nginx实现多个Tomcat负载均衡"><br /> 添加的代码如下:</p> <pre><code class="prism language-xml">upstream mynginx {  #集群地址     server  127.0.0.1:8080 weight=100;#单个服务地址及其权重，这个权重是默认负载均衡算法的值，越大越容易被访问 server  127.0.0.1:8081 weight=50; server  127.0.0.1:8082 weight=10; }    #修改server的配置,在其中添加如下代码: server {         listen       8888;#nginx端口         server_name  localhost;#host name          location / {            proxy_pass http://mynginx;#代理指向            # proxy_redirect default;         } } </code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads/20230119/908b51966aef3f0456ee0849785d87e2.jpg" alt="使用Nginx实现多个Tomcat负载均衡"></p> <h2> <a id="__130" rel="nofollow"></a>第八步. 启动测试:</h2> <p><strong>1.</strong> 启动三个Tomcat<br /><strong>2.</strong> 启动nginx<br /><strong>测试:</strong> 网站输入linux的ip:8888就会发现Tomcat1,Tomcat2,Tomcat3之前相互切换,且Tomcat的次数最多</p> <hr/> <p>同一个项目分别上传至三个Tomcat/webapps下,启动Tomcat,启动nginx.访问nginx的ip和端口。</p> </p></div> 			
                    <div class="col-md-12 mt-5">
                                                <p>上一个：<a href="/html/category/article-4030.htm">vite+element-plus项目基础搭建</a></p>
                                                <p>下一个：<a href="/html/category/article-4032.htm">springboot mybatis-plus 配置 yml 、druid 配置 yml 、mybatis-plus 代码生成</a></p>
                                            </div>

                                    </div>
                <div class="col-md-3">
                  <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-4048.htm" title="【Android笔记】BaseAdapter适配器的介绍、使用及优化（详细）">【Android笔记】BaseAdapter适配器的介绍、使用及优化（详细）</a></li>
                        <li class="py-2"><a href="/html/category/article-4055.htm" title="Token验证JWT方法">Token验证JWT方法</a></li>
                        <li class="py-2"><a href="/html/category/article-4049.htm" title="JAVA初始化自定义类的数组">JAVA初始化自定义类的数组</a></li>
                        <li class="py-2"><a href="/html/category/article-4061.htm" title="如何在Android sqlite中删除表？">如何在Android sqlite中删除表？</a></li>
                        <li class="py-2"><a href="/html/category/article-4063.htm" title="Python生成sql语句">Python生成sql语句</a></li>
                        <li class="py-2"><a href="/html/category/article-4050.htm" title="C ++程序实施Rabin-Miller素性测试以检查给定数字是否为素数">C ++程序实施Rabin-Miller素性测试以检查给定数字是否为素数</a></li>
                        <li class="py-2"><a href="/html/category/article-4039.htm" title="CoreWCF 1.0 正式发布，支持 .NET Core 和 .NET 5+ 的 WCF &#8211; 冠军 _在线工具">CoreWCF 1.0 正式发布，支持 .NET Core 和 .NET 5+ 的 WCF &#8211; 冠军 _在线工具</a></li>
                        <li class="py-2"><a href="/html/category/article-4046.htm" title="Vue  el-input  trim() 去空格">Vue  el-input  trim() 去空格</a></li>
                        <li class="py-2"><a href="/html/category/article-4020.htm" title="spring schedule 配置多任务动态 cron 【增删启停】">spring schedule 配置多任务动态 cron 【增删启停】</a></li>
                        <li class="py-2"><a href="/html/category/article-4348.htm" title="动物诊疗许可证去哪里办理手续（动物诊疗许可证在哪个部门办理）">动物诊疗许可证去哪里办理手续（动物诊疗许可证在哪个部门办理）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">8</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



               </div>
            </div>
        </div>
    </div>
    <!-- about sectuion end -->
        <!-- copyright section start -->
    <div class="copyright_section">
        <div class="container">
            <div class="row">
                <div class="col-sm-12">
                    <p class="copyright_text">
                        Lebanon Address 版权所有
                        <br />
                        Powered by WordPress
                    </p>
                </div>
            </div>
        </div>
    </div>
    <!-- copyright section end -->
    <!-- Javascript files-->
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/jquery.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/popper.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/bootstrap.bundle.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/jquery-3.0.0.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/lebanonaddress/plugin.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>